{"version":3,"sources":["components/hooks.js","components/progress.js","components/newbox.js","components/loading.js","components/searchcomponents.js","components/sidebar.js","pages/tsrpage.js","pages/indexpage.js","pages/itempage.js","components/background.js","components/topbar.js","components/beta.js","pages/pagepage.js","components/jumbo.js","App.js","serviceWorker.js","components/scrolltotop.js","components/googleanalytics.js","index.js","components/csscomponents.js","components/footer.js","components/recent.js","images/timemachine.png","images/postcardsender.png","images/drawing.svg"],"names":["useFetch","url","sort","useState","data","setData","loading","setLoading","a","fetch","response","json","b","aweight","bweight","element_texts","map","et","element","name","text","useEffect","fetchUrl","Progresscss","styled","div","colors","fg","bg","hl","fonts","serif","props","percent","numberWithCommas","x","Math","round","toString","replace","ItemProgress","itemid","pageCount","transCount","i","undefined","length","console","log","className","PageProgress","prog","TotalProgress","summary","totalTranscount","totalPages","Boxcss","show","sans","Box","boxProps","pages","filter","pagelist","title","substring","img","image","indexOf","to","id","src","alt","desc","count","Textbox","activePage","index","total","onClick","pageSwitch","ReactHtmlParser","searchresult","snippet","page","TextSearchResults","setActivePage","dir","adder","newPage","results","t","key","Loadingcss","Loading","Searchcss","Subjectcss","TitleSearch","input","setInput","history","useHistory","submitSearch","q","queryString","window","location","search","s","push","setFilters","filters","placeholder","value","type","onKeyDown","e","keyCode","onChange","target","toLowerCase","handleChange","size","TextSearch","LangSearch","langdropdown","l","lang","DateSearch","range","decades","date","SubjSearch","checked","setChecked","cat","subjectArray","subjectList","subjectDropdown","showMenu","css","Sidebar","resultCount","itempages","require","textfilter","itempagearray","searchResults","breakpointCols","breakpointColumnsObj","columnClassName","sresults","srrr","btitle","split","aitem","atob","apage","parseInt","matchitem","find","ip","item","boxes","filteredData","o","setResultCount","boxicate","query","default","1300","950","dateRegex","IndexPage","parse","itemsToShow","setItemsToShow","category","files","pc","weight","allDates","matchAll","min","Infinity","max","titleFFunction","langFFunction","dateFFunction","catFFunction","filterFunctions","filteredSlicedData","slice","Boxescss","Spacer","dataLength","next","newCount","hasMore","loader","FilterResults","NoResults","itemBoxes","Wrapper","Itemcss","ItemPage","useParams","pagesToShow","setPagesToShow","items","pageBoxes","p","transc","file_urls","thumbnail","href","cataloglink","rel","bgarray","Background","bgLink","random","rando","pathname","bodybg","Topbarcss","TopBar","breadcrumbs","curtainText","useLocation","ct","letterarray","tx","r","posneg","data-tx","data-r","instances","curtain","document","querySelector","letters","querySelectorAll","forEach","elem","getAttribute","basicScroll","from","direct","start","logo","Betacss","BetaBanner","PagePage","pageid","styles","Jumbocss","Jumbo","Body","Anchor","App","setShowMenu","setImage","pageTop","useRef","scrollTo","ref","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ScrollToTop","prevProps","this","children","React","Component","withRouter","GoogleAnalytics","logPageChange","prevLocation","isDifferentPathname","isDifferentSearch","ReactGA","set","origin","options","pageview","_env_","isGAEnabled","initialize","ReactDOM","render","basename","GA","getElementById","URL","process","addEventListener","headers","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","hll","hld","CoreBox","Bluebutton","Closebutton","Modal","Selectcss","select","Gardacss","footer","Contentcss","900","Footer","gettingStarted","setgettingStarted","tips","settips","about","setabout","toggleSection","section","stopPropagation","toggler","eval","toggled","About","GettingStarted","Tips","pspic","tmpic","sourceType","screenName","height","tweetLimit","RecentItemCss","RecentItem","setItem","setImg","makeItem","filename","itemlink","document_id","document_page_id","transcript","returnt","first","charAt","toUpperCase","substr","lastIndexOf","transcriptor","comment","returnItem","document_title","module","exports"],"mappings":"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","file":"static/js/main.a91c3011.chunk.js","sourcesContent":["import  { useState, useEffect } from \"react\";\n\nexport function useFetch(url, sort) {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    async function fetchUrl() {\n        const response = await fetch(url);\n        // console.log(response)\n        let json = await response.json()\n        json = sort ? json.sort(function(a, b) {\n          let aweight, bweight\n          a.element_texts.map(et => {\n            if(et.element.name === 'Percent Completed'){\n              aweight = et.text\n            }\n          })\n          b.element_texts.map(et => {\n            if(et.element.name === 'Percent Completed'){\n              bweight = et.text\n            }\n          })\n          return aweight - bweight\n        }) : json\n        setData(json);\n        setLoading(false);\n    }\n    useEffect(() => {\n        fetchUrl();\n    }, []);\n    return [data, loading];\n}\n","import React from 'react'\nimport { useFetch } from './hooks'\nimport styled from '@emotion/styled'\nimport { fonts, colors } from './csscomponents'\n// import { summary } from '/data/summary'\n\nconst Progresscss = styled.div`\n    border: 2px solid rgba(${colors.fg},0.7);\n    margin: 4px 0 8px 0;\n    height: 32px;\n    background: rgba(${colors.bg},0.7);\n    box-shadow: inset 0 0 10px rgba(0,42,85,0.7);\n    position: relative;\n    display: flex;\n    &:hover {\n        .text {\n            // color: rgba(${colors.fg},0.9);\n            color: black;\n        }\n        .complete {\n            background: rgba(${colors.hl},0.65);\n        }\n    }\n    .text {\n        font-family: ${fonts.serif};\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        // height: 26px;\n        font-size: 20px;\n        line-height: 32px;\n        // padding: 2px 0;\n        // margin: 0 auto;\n        text-align: center;\n        color: rgba(${colors.fg},0.8);\n        transition: color 0.3s;\n    }\n    .complete {\n        display: block;\n        background: rgba(${colors.hl},0.4);\n        flex-basis: ${props => props.percent}%;\n        transition: background 0.5s;\n    }\n  \n    transition: background 0.5s;\n    transition: color 0.5s;\n`\n\nexport function numberWithCommas(x) {\n    x = Math.round(x)\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport const ItemProgress = ({itemid, pageCount }) => {\n    const itemdataurl = '/transcription/mms-transcribe/api/files?item=' + itemid\n    const [data, loading] = useFetch(itemdataurl, false)\n    let transCount = 0\n    const percentage = data.map(i => {\n        if (i.element_texts[1] === undefined ){\n            // console.log('element texts 1 is undefined')\n        } else {\n        if (i.element_texts[1].element.name = 'Transcription'){\n            if (i.element_texts[1].text.length > 0){\n                transCount++\n            } else {\n                // console.log('transcription length 0') \n        }} else {\n            console.log('second element text not a transcription')\n        }\n    }})\n    const percent = Math.round((transCount / pageCount) * 100 )\n    return (\n        <Progresscss \n            percent={percent}>\n            <div className=\"complete\"></div>\n            <div className=\"text\">{percent}% transcribed</div>\n        </Progresscss>\n    )\n}\n\nexport const PageProgress = ({prog}) => {\n    const percent = prog ? 100 : 0\n    return (\n    <Progresscss percent={percent}>\n            {prog ? \n                <div className=\"complete text\">In Progress / Needs Review</div>\n            :    \n                <div className=\"text\">Not transcribed</div>\n        }\n    </Progresscss>\n)}\n\nexport function TotalProgress() {\n    const summaryUrl = '/transcribe/data/summary.json'\n    const [ data, loading ] = useFetch(summaryUrl)\n    return (\n        <>{ loading ? 'Loading...' : <>\n            <div className=\"progress-text\" >{numberWithCommas(data.summary.totalTranscount)} out of {numberWithCommas(data.summary.totalPages)} pages transcribed!</div>\n            <Progresscss percent={Math.round((data.summary.totalTranscount / data.summary.totalPages) * 100)}>\n                <div className=\"complete\"></div>\n                <div className=\"text\">{Math.round((data.summary.totalTranscount / data.summary.totalPages) * 100)}% transcribed</div>\n            </Progresscss>\n        </>\n        }\n        </>\n    )\n}","import React, { useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'react-router-dom';\nimport { colors, fonts, Bluebutton } from '../components/csscomponents'\nimport { ItemProgress } from './progress'\nimport Highlighter from 'react-highlight-words'\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n \n\nconst Boxcss = styled.div`\n\n    background: rgba(${colors.bg}, 1);\n    border: 2px solid rgba(${colors.fg}, 1);\n    box-shadow: inset 0 0 10px rgba(${colors.hl},0.5);\n    position: relative;\n    overflow: hidden;\n    display: ${props => props.show ? 'block' : 'none'};\n    min-width: 20vw;\n    img {\n        margin: 0;\n        padding: 0;\n        width: 100%;\n\n        box-shadow:  0 0 8px rgba(${colors.fg},1);\n    }\n    .text {\n        padding: 0 15px 15px 15px;\n    }\n    .title h3, .progress {\n        font-family: ${fonts.serif};\n        padding: 5px 0;\n    }\n    .desc, .cats {\n        font-family: ${fonts.sans};\n    }\n    .desc {\n        font-size: 0.85rem;\n    }\n    h3 {\n        line-height: 25px;\n        padding: 0;\n        margin: 0;\n        font-size: 22px;\n        a {\n            transition: color 0.2s;\n            text-decoration: none;\n            color: rgba(${colors.fg}, 0.8);\n            background-image: linear-gradient(transparent 1px, rgba(${colors.fg}, 1) 2px);\n            background-size: 0% 2px;\n            background-position: 0% 105%;\n            background-repeat: no-repeat;\n            transition: background-size 0.2s ease 0s, color 0.2s;\n\n            &:hover {\n                color: rgba(${colors.fg}, 1);\n                background-size: 100% 3px;\n            }\n        }\n    }\n    .cats {\n        margin: 0 ;\n        span {\n            margin: 0 ;\n            padding: 0 5px;\n            display: inline;\n            border: 1px solid transparent;\n            a {\n                font-size: 0.7rem;\n                text-transform: uppercase;\n                text-decoration: none;\n                line-height: 15px;\n                height: 15px;\n                &:link, &:visited {\n                    color: rgba(${colors.hl},1);\n                }\n                &:hover, &:active {\n                    color: rgba(${colors.hl},0.75);\n                }\n            }\n            border-right: 1px solid rgba(${colors.hl},1);\n            background-image: linear-gradient(transparent 1px, rgba(${colors.hl},1) 1px);\n            background-size: 0% 1px;\n            background-position: 0% 101%;\n            background-repeat: no-repeat;\n            transition: background-size 0.2s ease 0s;\n            &:hover {\n                background-size: 100% 2px;\n            }\n            &:first-of-type {\n                padding: 0 5px 0 0;\n            }\n            &:last-of-type {\n                border-right: 0;\n            }\n        }\n    }\n\n    .active {\n        display: block;\n        span {\n            overflow-wrap: break-word;\n            word-wrap: break-word;\n            -ms-word-break: break-all;\n            word-break: break-word;\n            -ms-hyphens: auto;\n            -moz-hyphens: auto;\n            -webkit-hyphens: auto;\n            hyphens: auto;\n        }\n    }\n    .inactive {\n        display: none;\n    }\n    .resultstext {\n        line-height: 36px;\n        display: block;\n        text-align: center;\n        flex-shrink: 0;\n    }\n    .searchtextpanel {\n        padding: 0;\n        background: rgba(${colors.bg},1);\n        border: 1px solid rgba(${colors.fg},1);\n        color: rgba(${colors.fg},1);\n        margin: -10px 0 0 0;\n        // height: 220px;\n        overflow: auto;\n        position: relative;\n     \n        .topwrapper {\n\n            position: sticky;\n            top: 0;\n        }\n        .bottomlink {\n            position: sticky;\n            bottom: 0;\n            a {\n                text-decoration: none;\n            }\n        }\n        .topwrapper {\n            padding: 5px 0;\n            margin: 0;\n            width: 100%;\n            height: 40px;\n            display: flex;\n            justify-items: center;\n            flex-direction: row;\n            background: rgba(${colors.bg},1);\n            box-shadow:  0 0 8px rgba(${colors.fg},1);\n            .resultcount, .btncontainer {\n                margin: auto;\n                text-align: center;\n            }\n            .btncontainer {\n                @media (min-width: 1201px ) { flex: 1;}\n                @media (max-width: 1200px ) { flex-basis: 50px;}\n            }\n            .resultcount {\n                flex: 1;\n            }\n            p {\n                margin: 0;\n                line-height: 30px;\n            }\n            button {\n                height: 30px;\n                width: 30px;\n                transition: all 0.2s;\n            }\n            \n        }\n        .magiclink {\n            color: rgba(${colors.fg}, 1);\n            line-height: 30px;\n            margin: auto;\n            text-decoration: none;\n            background-image: linear-gradient(transparent 1px, rgba(${colors.fg}, 0.8) 2px);\n            background-size: 0% 2px;\n            background-position: 0% 105%;\n            background-repeat: no-repeat;\n            transition: background-size 0.2s ease 0s;\n            // border: 1px solid rgba(${colors.fg}, 1);\n            cursor: pointer;\n            // box-shadow: 0 0 10px rgba(0,42,85,0.2);\n            &:hover {\n                // border-bottom: 1px solid rgba(${colors.hl}, 1);\n                background-size: 100% 3px;\n            }\n        }\n    .hilitecontent {\n        display: block;\n        padding: 15px;\n    }\n    .searchmatch {\n        background: yellow;\n    }\n    .activearrow {\n        color: rgba(${colors.fg}, 1);\n        border: 1px solid rgba(${colors.fg}, 1);\n        cursor: pointer;\n        box-shadow: 0 0 10px rgba(0,42,85,0.2);\n        &:hover {\n            box-shadow: 0 0 10px rgba(0,42,85,0.5);\n        }\n    }\n    .inactivearrow {\n        color: rgba(${colors.fg}, 0.5);\n        border: 1px solid rgba(${colors.fg}, 0.5);\n        cursor: not-allowed;\n        box-shadow: inset 0 0 10px rgba(0,42,85,0.2);\n        &:hover {\n            box-shadow: inset 0 0 10px rgba(0,42,85,0.5);\n        }\n    }\n`\n\nconst Box = ({boxProps, show, pages, filter}) => {\n    const pagelist = pages !== undefined && pages.length > 0 \n    const title = boxProps.title.length > 100 ? boxProps.title.substring(0,100) + '...' : boxProps.title\n    const img = boxProps.image.indexOf('default.jpg') > -1 ? boxProps.image.replace('/full/full/0/default.jpg','/square/400,/0/default.jpg') : boxProps.image.indexOf('mms-transcribe') > -1 ? boxProps.image : boxProps.image  + '/full/400,/0/default.jpg'\n    return (\n        <Boxcss show={show}>\n            <div className=\"image\"><Link to={'/item/' + boxProps.id}><img src={img} alt={title}/></Link></div>\n            <div className=\"text\">\n                <div className=\"title\">\n                    <h3>\n                        <Link to={'/item/' + boxProps.id} >\n                            {title}\n                            {pagelist}\n                        </Link>\n                    </h3>\n                    </div>\n                <div className=\"desc\">{boxProps.desc}</div>\n            <ItemProgress pageCount={boxProps.count} itemid={boxProps.id} />\n            </div>\n            {pagelist ? <TextSearchResults pages={pages} id={boxProps.id} filter={filter} /> :''}\n        </Boxcss>\n    )\n\n}\n\nexport default Box\n\nconst Textbox = props => {\n    return (\n    <div className={props.activePage === props.index ? 'active' : 'inactive'}>\n        <div className=\"topwrapper\">\n            <div className=\"btncontainer\"><button className={props.total > 1 ? 'leftarrow activearrow' : 'leftarrow inactivearrow'} onClick={() => props.pageSwitch('back')}>&#60;</button></div>\n            <div className=\"resultcount\">Result {props.index + 1} of {props.total}</div>\n            <div className=\"btncontainer\"><button className={props.total > 1 ? 'rightarrow activearrow' : 'rightarrow inactivearrow'} onClick={() => props.pageSwitch('forward')}>&#62;</button></div>\n        </div>\n        <div className=\"hilitecontent\" >{ ReactHtmlParser(props.searchresult.snippet)}</div>\n        <Bluebutton className=\"bottomlink\"><div className=\"wrapper\"><Link className=\"button\"  to={'/item/' + props.id + '/page/' + props.searchresult.page} >Go to page</Link></div></Bluebutton>\n        \n    </div>\n)}\nconst TextSearchResults = ({ pages, id, filter }) => {\n    const [activePage, setActivePage] = useState(0)\n    const pageSwitch = dir => {\n        const adder = dir === 'back' ? -1 : 1\n        const newPage = adder + activePage > pages.length - 1 ? 0 : adder + activePage < 0 ? pages.length - 1 : adder + activePage\n        setActivePage(newPage)\n        // props.setBgImage('https://publications.newberry.org/transcription/mms-transcribe/files/original/' + props.searchresults[newPage].pagefilename)\n    }\n    const results = pages.map((t, i) => {\n        if (t.snippet.length > 0) {\n            return <Textbox key={t.page} id={id} activePage={activePage} pageSwitch={pageSwitch} total={pages.length} filter={filter} searchresult={t} index={i} />\n        } else {\n            return true\n        }\n    })\n    return (\n        <div className=\"searchtextpanel\">\n            {results}\n        </div>\n    )\n}","import React from 'react'\nimport styled from '@emotion/styled'\nimport { colors, fonts } from './csscomponents'\n\n\nconst Loadingcss = styled.div`\n    width: 100vw;\n    overflow: hidden;\n    position: fixed;\n    top: 50vh;\n    left: 0;\n    .loading {\n        border: 2px solid rgba(${colors.fg},0.7);\n        box-shadow: inset 0 0 10px rgba(${colors.hl},0.7);\n        text-align: center;\n        background: rgba(${colors.bg},1);\n        background: repeating-linear-gradient(-45deg, \n            rgba(${colors.hl},0.5),\n            rgba(${colors.hl},0.5) 20px, \n            rgba(${colors.bg},1) 20px, \n            rgba(${colors.bg},1) 40px);\n        background-size: 400% 400%;\n        animation: gradient 22s linear infinite;\n\n        width: 50vw;\n        height: 10vh;\n        line-height: 10vh;\n        font-size: 5vh;\n        margin: auto;\n    }\n    @keyframes gradient {\n        0% {\n            background-position: 100% 50%;\n        }\n        100% {\n            background-position: 0% 50%;\n        }\n    }\n    .text {\n        border: 2px solid rgba(${colors.fg},0.7);\n        font-family: ${fonts.serif};\n        color: rgba(${colors.fg},1);\n        background: rgba(${colors.bg},0.75);\n        box-shadow: 0 0 10px rgba(${colors.hl},0.7);\n        padding: 5px 10px;\n        border-radius: 3px;\n    }\n`\n\nconst Loading = props => <Loadingcss><div className=\"loading\"><span className=\"text\">Loading{props.pages ? ' '  + props.pages + ' pages' : ''}...</span></div></Loadingcss>\n\nexport default Loading","import { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from '@emotion/styled'\n/** @jsx jsx */\nimport { jsx, css  } from '@emotion/core'\nimport { IoIosSearch } from 'react-icons/io'\nimport { fonts, colors, Selectcss } from './csscomponents'\nimport { MdCheckBox, MdCheckBoxOutlineBlank } from 'react-icons/md'\nimport * as queryString  from 'query-string'\n\nconst Searchcss = styled.div`\n    border: 1px solid black;\n    margin: 5px 0;\n    background: rgba(237,237,237,0.7);\n    display: flex;\n    flex-wrap: nowrap;\n    overflow: hidden;\n    .searchInput {\n        font-family: ${fonts.sans};\n        box-shadow: inset 0 0 10px rgba(0,42,85,0.5);\n        background: transparent;\n        border: 1px solid rgba(0,42,85,0.5);\n        flex: 1;\n        padding: 0 0 0 10px;\n        font-size: 12px;\n        width: calc(100% - 35px);\n        margin: 0;\n        &::placeholder {\n        text-transform: uppercase;\n        }\n    }\n    .searchbutton {\n        border: 1px solid black;\n        box-shadow: inset 0 0 10px rgba(0,42,85,0.2);\n        flex-basis: 35px;\n        flex-shrink: 0;\n        height: 30px;\n        background-position: center;\n        background-size: 50%;\n        background-repeat: no-repeat;\n        color: rgba(${colors.hl},1);\n        cursor: pointer;\n    }\n    &.titlesearch {\n        margin: 4px 0 8px 0;\n    }\n`\nconst Subjectcss = styled.div`\n    font-family: ${fonts.sans};\n    span {\n        display: block;\n        padding: 5px 5px 0 7px;\n        height: 20px;\n        line-height: 20px;\n        font-size: 15px;\n        text-transform: uppercase;\n    }\n    ul {\n        padding: 0 7px;\n        margin: 10px 0;\n        list-style-type: none;\n    }\n    li {\n        text-transform: uppercase;\n        font-size: 15px;\n        margin: 0;\n        padding: 0 0 0 5px;\n        cursor: pointer;\n        border: 1px solid transparent;\n        transition: border 0.1s;\n        font-family: ${fonts.sans};\n        text-transform: uppercase;\n        background: rgba(0,0,0,0);\n        &:hover {\n            border: 1px solid rgba(${colors.hl}, 1);\n            box-shadow:  0 0 10px rgba(${colors.fg},0.5);\n        }\n        &.viewall {\n            font-weight: 900;\n            text-align: center;\n            line-height: 30px;\n            height: 30px;\n        }\n    }\n    .icon {\n        vertical-align: sub;\n        margin-right: 4px;\n        margin-bottom: 3px;\n    }\n    // html:not([data-scroll='0']) {\n    //     padding-top: 3em;\n    //   }\n    //   html:not([data-scroll='0']) header {\n    //     position: fixed;\n    // }\n    &.droporlist {\n        @media (max-width: 850px) { \n            .subjectlist {display: none;} \n            .subjectdropdown {display: block;}\n        }\n        @media (min-width: 850px) { \n            .subjectlist {display: block;} \n            .subjectdropdown {display: none;}\n        }\n        @media (max-height: 750px) { \n            .subjectlist {display: none;} \n            .subjectdropdown {display: block;}\n        }\n        @media (min-height: 750px) { \n            .subjectlist { display: block; } \n            .subjectdropdown { display: none; }\n        }\n    }\n`\n\nexport const TitleSearch = props => {\n    const [input, setInput] = useState('')\n    let text = input.length > 0 ? input : 'Search titles...'\n    const history = useHistory()\n    const handleChange = (e) => {\n        setInput(e.target.value.toLowerCase())\n    }\n    const submitSearch = () => {\n        console.log(input)\n        let q = queryString.parse(window.location.search)\n        q = {...q, title: input}\n        let s = queryString.stringify(q)\n        history.push(`/?${s}`)\n        props.setFilters(q)\n        console.log(props.filters)\n    }\n    const handleKeyDown = (e) => {\n        if(e.keyCode === 13){\n            submitSearch()\n        }\n    }\n    return (\n        <Searchcss className=\"titlesearch\">\n            <input className=\"searchInput\" placeholder={text}  value={props.input} type=\"text\" onKeyDown={handleKeyDown} onChange={(e) => handleChange(e)} />\n            <button className=\"searchbutton\" onClick={submitSearch}><IoIosSearch size=\"1.5rem\" /></button>\n        </Searchcss>\n    )\n}\n\nexport const TextSearch = props => {\n    const [input, setInput] = useState('')\n    let text = input.length > 0 ? input : 'Search transcription text...'\n    const history = useHistory()\n    const handleChange = (e) => {\n        setInput(e.target.value.toLowerCase())\n    }\n    const submitSearch = () => {\n        console.log(input)\n        let q = queryString.parse(window.location.search)\n        q = {...q, text: input}\n        let s = queryString.stringify(q)\n        history.push(`/?${s}`)\n        props.setFilters(q)\n        console.log(props.filters)\n    }\n    const handleKeyDown = (e) => {\n        if(e.keyCode === 13){\n            submitSearch()\n        }\n    }\n    return (\n        <Searchcss className=\"text-search\">\n            <input className=\"searchInput\" placeholder={text}  value={props.input} type=\"text\" onKeyDown={handleKeyDown} onChange={(e) => handleChange(e)} />\n            <button className=\"searchbutton\" onClick={submitSearch}><IoIosSearch size=\"1.5rem\" /></button>\n        </Searchcss>\n    )\n}\n\n\nexport const LangSearch = props => {\n    const languages = ['English','French','German','Italian','Spanish','Welsh','Yiddish']\n    const langdropdown = languages.map((l) => <option key={l} value={l} >{l}</option>)\n    const history = useHistory()\n    const handleChange = (value) => {\n        let q = queryString.parse(window.location.search)\n        q = {...q, lang: value}\n        let s = queryString.stringify(q)\n        history.push(`/?${s}`)\n        props.setFilters(q)\n    }\n    return (\n        <Selectcss name=\"dropdownlanguages\" className=\"dropdown\" value={props.filters.lang} onChange={e => handleChange(e.target.value)}>\n            <option value=\"English\" >Select a language...</option>\n            {langdropdown}\n        </Selectcss>\n    )\n}\nexport const DateSearch = props => {\n    const range = [1800, 1990]\n    let decades = []\n    for (let i = range[0]; i < range[1]; i += 10){\n        decades.push( i === 1960 || i === 1970 ? '' : <option key={i} value={i} >{i} - {i + 9}</option>)\n    }\n    const history = useHistory()\n    const handleChange = (value) => {\n        let q = queryString.parse(window.location.search)\n        q = {...q, date: value}\n        let s = queryString.stringify(q)\n        history.push(`/?${s}`)\n        props.setFilters(q)\n    }\n    return (\n        <Selectcss id=\"dropdowndecade\" className=\"dropdown\" name=\"dropdowndecade\" value={props.filters.date}  onChange={e => handleChange(e.target.value)}> >\n            <option value={1}>Select a decade...</option>\n            <option key=\"early\" value=\"1799\" >pre-1800</option>\n            {decades}\n        </Selectcss>\n    )\n}\nexport const SubjSearch = props => {\n    const [ checked, setChecked ] = useState(false)\n    const history = useHistory()\n    const handleChange = value => {\n        setChecked(true)\n        let q = queryString.parse(window.location.search)\n        q = {...q, cat: value}\n        let s = queryString.stringify(q)\n        history.push(`/?${s}`)\n        props.setFilters(q)\n    }\n    const subjectArray = [\n        // \"Cassettes\",\n        \"Family papers\",\n        \"Diaries\",\n        \"Women\",\n        \"World's Columbian Exposition\",\n        \"Travelers’ writings\",\n        \"Labor Movement\",\n        \"Letters (Correspondence)\",\n        \"Records (Documents)\",\n        \"American Civil War (1861-1865)\",\n        // \"Everett D. Graff Collection of Western Americana\",\n        \"U.S. Western Expansion\",\n        \"Indians of North America\",\n        // \"Edward E. Ayer Manuscript Collection\",\n    ]\n    const subjectList = subjectArray.sort().map((s, index) => {\n        return <li key={index} onClick={() => handleChange(s)}>\n            {checked ? <MdCheckBox className=\"icon\" /> : <MdCheckBoxOutlineBlank className=\"icon\" />}\n            {\n                s === 'American Civil War (1861-1865)' ? 'Civil War' : \n                s === 'Letters (Correspondence)' ? 'Letters' : \n                s === 'Records (Documents)' ? 'Records' : \n                s === 'Indians of North America' ? 'American Indians and Indigenous peoples' :\n                s\n            }\n        </li>\n    })\n    const subjectDropdown = subjectArray.sort().map((s,index) => <option key={index} value={s}  >\n        {   s === 'American Civil War (1861-1865)' ? 'Civil War' : \n            s === 'Letters (Correspondence)' ? 'Letters' : \n            // s === 'Letters (Documents)' ? 'Letters' : \n            s === 'Records (Documents)' ? 'Records' : \n            s\n        }\n        </option>\n    )\n    let dropOrList = props.showMenu ? css`` : css``\n    return (\n        <Subjectcss className=\"droporlist\">\n            <div className=\"subjectlist\">\n                <span>Select a category...</span>\n                <ul>\n                    {subjectList}\n                </ul>\n            </div>\n            <div className=\"subjectdropdown\">\n                <Selectcss id=\"dropdownsubj\" className=\"dropdown\" name=\"dropdownsubj\" value={props.filters.cat} onChange={e => handleChange(e.target.value)}>\n                    <option value={''}>Select a category...</option>\n                    {subjectDropdown}\n                </Selectcss>\n            </div>\n        </Subjectcss>\n    )\n}\n\n","import { BrowserRouter as Router, Link } from 'react-router-dom'\n/** @jsx jsx */\nimport { jsx, css  } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { fonts, colors, Bluebutton } from './csscomponents'\nimport { TitleSearch, TextSearch, DateSearch, LangSearch, SubjSearch } from './searchcomponents'\nimport { TotalProgress } from './progress'\nimport React, { useState } from 'react'\nimport { GiHamburgerMenu } from 'react-icons/gi'\nimport { GrClose } from 'react-icons/gr'\nimport { IconContext } from \"react-icons\";\n\n// const CoreBox = () styled.div`\n// `\n\n\nconst Sidebar = props => {\n    // const [tall, setTall] = useState(false)\n    // function expander(e) {\n    //     e.stopPropagation();\n    //     setTall(!tall)\n    // }\n    return (\n        <div className=\"sidebar\" css={css`\n        \n        `}>\n            <div  css={css`\n                background: rgba(${colors.bg}, 1);\n                border: 2px solid rgba(${colors.hl}, 1);\n                box-shadow: inset 0 0 10px rgba(${colors.fg},0.5);\n                transition: max-height 0.4s;\n                padding: 20px;\n                overflow: hidden;\n                margin: 0 30px 30px 30px;\n                @media ( min-width: 951px ) {\n                    position: sticky;\n                    top: 60px;\n                    display: block;\n                }\n                @media (max-width: 950px) {\n                    position: sticky;\n                    min-width: 300px;\n                    // margin: 0 auto 30px auto;\n                }\n                > p {\n                    font-family: ${fonts.serif};\n                    text-transform: uppercase;\n                    text-align: center;\n                }\n                .count {\n                    font-family: ${fonts.serif};\n                }\n                .count, .progress-text {\n                    text-align: center;\n                    display: block;\n                    width: 100%;\n                }\n                .progress-text {\n                    font-family: ${fonts.sans};\n                    font-size: 0.85rem;\n                    text-transform: uppercase;\n                }\n                .menu {\n                    position: fixed;\n                    top: 0;\n                    right: 0;\n                    border: none;\n                }\n                .container {\n                    background: none;\n                    border: none;\n                    display: inline-block;\n                    cursor: pointer;\n                    padding: 5px 7px;\n                }\n                \n            `}>\n                <TotalProgress />\n                <TitleSearch filters={props.filters} setFilters={props.setFilters} />\n                <TextSearch filters={props.filters} setFilters={props.setFilters} />\n                <DateSearch filters={props.filters} setFilters={props.setFilters} />\n                <LangSearch filters={props.filters} setFilters={props.setFilters} />\n                <SubjSearch filters={props.filters} setFilters={props.setFilters} />\n                <span className=\"count\" >{ props.resultCount === 1 ? props.resultCount + ' result.' : props.resultCount + ' results.' } </span>\n                <Bluebutton><div className=\"wrapper\"><Link to=\"/\" className=\"button\" >Reset</Link></div></Bluebutton>\n      \n            </div>\n        </div>\n    )\n}\n\nexport const resetFilters = (e, setFilters) => {\n    e.preventDefault()\n    setFilters({\n        lang: 'English',\n        cat:  '' ,\n        date: 1 ,\n        text: [] ,\n    })\n    \n    Router.push({\n        pathname: '/',\n        query: {},\n    })\n    const inputField = typeof document !== `undefined` ? document.querySelector('.searchInput') : null  \n    const dropdowns = typeof document !== `undefined` ? document.querySelectorAll('.dropdown') : null  \n    inputField.value = ''\n    inputField.placeholder = 'Search the Transcriptions...'\n    dropdowns.forEach(d => d.selectedIndex = 0) \n}\n\nexport default Sidebar","import React from \"react\";\nimport { useFetch } from \"../components/hooks\";\nimport Masonry from 'react-masonry-css'\nimport { breakpointColumnsObj } from './indexpage'\nimport Box from '../components/newbox'\n\nconst itempages = require('../data/itempages.json')\n\nfunction TextSearchResults(props) {\n    let mwQueryUrl = '/mediawiki2017/api.php?action=query&list=search&format=json&srwhat=text&srlimit=200&srsearch=' + props.textfilter\n    const [ data, loading ] = useFetch(mwQueryUrl, false)\n    let itempagearray = []\n    const searchResults = data\n    // a link with readable json \n    // let mwslink = <a href={'http://publications.newberry.org/mediawiki2017/api.php?action=query&list=search&srwhat=text&srlimit=200&srsearch=' + props.textfilter} >link to search results</a>\n    function boxicate(sresults) {\n        // takes mediawiki pagename, parses it and converts from base64, pushes it into itempagearray \n        let b64converter = sresults.map(srrr => {\n            // console.log(srrr)\n\n            const btitle = srrr.title.split('.')\n            // always starts with a . so the [0] is always \"\"\n            const aitem = atob(btitle[1])\n            let apage = atob(btitle[2])\n            apage = parseInt(apage)\n            const matchitem = itempages.find(ip => ip.id == aitem)\n            // if the page isn't in the array of pages for that item, it's not added\n            if (matchitem !== undefined && matchitem.pages.indexOf(apage) > -1) {\n                if (itempagearray.find(ip => ip.item === aitem) === undefined ){\n                    itempagearray.push({item: aitem, pages: [{page: apage, snippet: srrr.snippet}]})\n                } else {\n                    itempagearray.find(ip => ip.item === aitem).pages.push({page: apage, snippet: srrr.snippet})\n                }\n            }\n        })\n        let boxes = itempagearray.filter(ip => props.filteredData.find(o => o.id == ip.item) !== undefined).map(ip => {\n            const item = props.filteredData.find(o => o.id == ip.item)\n            return <Box boxProps={item} key={ip.item} show={true} pages={ip.pages} filter={props.textfilter}/>\n        })\n        props.setResultCount(boxes.length)\n        return boxes\n    }\n    return (\n        <>\n        {loading ? '' :\n            <Masonry\n                breakpointCols={breakpointColumnsObj}\n                className=\"masonry-grid\"\n                columnClassName=\"masonry-grid_column\">\n                {boxicate(searchResults.query.search)}\n            </Masonry>\n        }\n        </>\n    )\n}\n\nexport default TextSearchResults ","import React, { useState } from \"react\";\nimport styled from '@emotion/styled'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Masonry from 'react-masonry-css'\nimport { useFetch } from \"../components/hooks\";\n// import { location } from 'react-router-dom'\nimport Box from '../components/newbox'\nimport Loading from '../components/loading'\nimport Sidebar from '../components/sidebar'\nimport { colors, fonts } from '../components/csscomponents'\nimport TextSearchResults from \"./tsrpage\";\nconst queryString = require('query-string');\n\nexport const breakpointColumnsObj = {\n  default: 3,\n  1300: 2,\n  950: 1,\n}\nconst dateRegex = /[0-9]{4}/g\n\nfunction IndexPage (){\n  const [ resultCount, setResultCount ] = useState(0)\n  const search = queryString.parse(window.location.search);\n  // console.log(search)\n  const dataurl = '/transcription/mms-transcribe/api/items/'\n  const [ data, loading ] = useFetch(dataurl, true)\n  const [ itemsToShow, setItemsToShow ] = useState(17)\n  const [filters, setFilters ] = useState({\n    title: search !== undefined && search.title !== undefined ? search.title : '',\n    lang: search !== undefined && search.lang !== undefined ? search.lang : 'English',\n    category:  search !== undefined && search.cat  !== undefined ? search.cat  : '' ,\n    date: search !== undefined && search.date !== undefined ? search.date : 1 ,\n    text: search !== undefined && search.text !== undefined ? [search.text] : [] ,\n  })\n  const filteredData = data.map((i, index) => {\n      let item = {\n        id: i.id,\n        count: i.files.count,\n        date: [],\n        category: '',\n        image: '',\n        desc: '',\n        lang: '',\n        title: '',\n        pc: 0,\n        weight: 0,\n      }\n      i.element_texts.map(et => {\n        if (et.element.name === 'Subject'){\n          item.category = et.text\n        } else if (et.element.name === 'Source') {\n          item.image = et.text\n        } else if (et.element.name === 'Relation') {\n          item.desc = et.text\n        } else if (et.element.name === 'Language') {\n          item.lang = et.text.length > 0 ? et.text : 'English'\n        } else if (et.element.name === 'Title') {\n          item.title = et.text\n          var allDates = et.text.matchAll(dateRegex)\n          item.date[0] = Math.min(...allDates)\n          if (Math.min(...allDates) !==  Infinity)  item.date[0] = Math.min(...allDates)\n          if (Math.max(...allDates) !== -Infinity)  item.date[1] = Math.max(...allDates)\n          if (Math.min(...allDates) !==  Infinity && Math.max(...allDates) !== -Infinity) console.log(item)\n        } else if (et.element.name === 'Percent Completed') {\n          item.pc = et.text\n        } else if (et.element.name === 'Weight') {\n          item.weight = et.text\n        } \n      })\n    return item\n  }).filter(i => filterFunctions(filters, i))\n  let filteredSlicedData = filteredData.slice(0,itemsToShow)\n  function addItems(){\n    let newCount = Math.min(filteredData.length, itemsToShow + 21)\n    setItemsToShow(newCount)\n  }\n  return (\n      <Boxescss>\n        <Sidebar setFilters={setFilters} filters={filters} resultCount={resultCount} />\n      \n        {loading ? <><Loading text=\"Searching\" /><Spacer /></> : filteredData.length > 0 ?\n          <InfiniteScroll\n            dataLength={resultCount} //This is important field to render the next data\n            next={addItems}\n            hasMore={true}\n            loader={<span></span>}>\n                {filters.text.length > 0 ? <TextSearchResults filteredData={filteredSlicedData} textfilter={filters.text} setResultCount={setResultCount} /> : <FilterResults itemsToShow={itemsToShow} filteredData={filteredSlicedData} setResultCount={setResultCount} />}\n          </InfiniteScroll>\n          : <NoResults>No results.</NoResults>\n        }\n      </Boxescss>\n  )\n}\n\nexport default IndexPage\n\nfunction filterFunctions(filter, item){\n  let titleFFunction, langFFunction, dateFFunction, catFFunction\n  titleFFunction = item.title.toLowerCase().indexOf(filter.title.toLowerCase()) > -1 ? true : false \n  langFFunction = item.lang.toLowerCase().indexOf(filter.lang.toLowerCase()) > -1 ? true : false\n  filter.date = parseInt(filter.date)\n  // item.date = [parseInt(item.date[0]), parseInt(item.date[1])]\n  // console.log(langFFunction)\n  // console.log(item.date)\n  if ( filter.date === 1 || (filter.date === 1799 && item.date[0] < 1799)) {\n    // console.log('first case')\n    dateFFunction =  true\n  } else if ( item.date.length === 1 && item.date[0] >= filter.date && item.date[0] <= (filter.date + 9) ) {\n    // console.log('second case')\n    dateFFunction =  true\n  } else if ( item.date.length === 2 && item.date[0] <= (filter.date + 9) && item.date[1] >= filter.date ) {\n    // console.log('third case')\n    dateFFunction =  true\n   } else {\n    //  console.log('date not in range: item date: ' + item.date[0] + '; filter date : ' + filter.date)\n   }\n  \n  // dateFFunction = (\n  //   ( filter.date === 1 || (filter.date === 1799 && item.date[0] < 1799)) ||\n  //   ( item.date.length === 1 && item.date[0] >= filter.date && item.date[0] <= (filter.date + 9) ) ||\n  //   ( item.date.length === 2 && item.date[0] <= (filter.date + 9) && item.date[1] >= filter.date ) ) ? true : false \n  catFFunction = item.category.toLowerCase().indexOf(filter.category.toLowerCase()) > -1 ? true : false \n  const returnValue = titleFFunction && langFFunction && dateFFunction && catFFunction\n  return returnValue\n}\n\n\nexport const NoResults = styled.div`\n  width: 50vw;\n  width: 94%;\n  height: 20vh;\n  line-height: 10vh;\n  font-size: 5vh;\n  margin: auto;\n  text-align: center;\n  font-family: ${fonts.serif};\n  background: rgba(${colors.bg}, 1);\n  border: 2px solid rgba(${colors.hl}, 1);\n  box-shadow: inset 0 0 10px rgba(${colors.fg},0.5);\n`\n\nexport const Boxescss = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 60vh auto 0 auto;\n  width: 100%;\n   > * {\n     flex: 1;\n   }\n  &.hide {\n      display: none;\n  }\n  .masonry-grid {\n    flex: 1;\n    display: flex;\n    margin-left: -30px; /* gutter size offset */\n    width: auto;\n  }\n  .masonry-grid_column {\n    padding-left: 30px; /* gutter size */\n    background-clip: padding-box;\n  }\n  .masonry-grid_column > div { /* change div to reference your elements you put in <Masonry> */\n    margin-bottom: 30px;\n  }\n`\n\nfunction FilterResults(props) {\n  props.setResultCount(props.filteredData.length)\n  const itemBoxes = props.filteredData.map((i, index) => <Box boxProps={i} key={index} show={true}>{i.title}</Box>)\n\n  return (\n   <><Masonry\n   breakpointCols={breakpointColumnsObj}\n   className=\"masonry-grid\"\n   columnClassName=\"masonry-grid_column\">\n    {itemBoxes}\n    </Masonry>\n   </>\n )\n}\n\nconst Spacer = styled.div`\n\n  position: relative;\n  width: 50vw;\n`","import React, { useState } from \"react\";\nimport styled from '@emotion/styled'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Masonry from 'react-masonry-css'\nimport { useFetch } from '../components/hooks'\nimport { Link, useParams } from 'react-router-dom'\nimport { items } from '../data/items.json'\nimport { colors, fonts, Bluebutton } from '../components/csscomponents'\nimport { PageProgress, ItemProgress } from '../components/progress'\nimport Loading from '../components/loading'\n\nconst Wrapper = styled.div`\n    position: relative;\n    margin: 10vh auto 0 auto;\n    padding: 0;\n    z-index: 1;\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n`\nconst Itemcss = styled.div`\n    width: 60%;\n    background: rgba(${colors.bg});\n    color: rgba(${colors.fg});\n    box-shadow: inset 0 0 10px rgba(${colors.fg},1);\n    margin: 80px auto;\n    padding: 2vw;\n    font-family: ${fonts.sans};\n    border: 2px solid rgba(${colors.fg},0.7);\n    h1, h3 {\n        font-family: ${fonts.serif};\n        margin: 12px 0;\n    }\n    h3 {\n        font-size: 1.5rem;\n    }\n    ul {\n        li {\n            padding: 5px 0;\n        }\n    }\n    p { \n        margin-bottom: 12px;\n    }\n    a {\n        font-weight: 900;\n        text-decoration: none;\n        color: rgba(${colors.fg}, 1);\n        background-image: linear-gradient(transparent 1px, rgba(${colors.hl},1) 1px);\n        background-size: 0% 1px;\n        background-position: 0% 101%;\n        background-repeat: no-repeat;\n        transition: background-size 0.2s ease 0s;\n        &:hover {\n            background-size: 100% 2px;\n        }\n        \n    }\n    .itemheaderimage {\n        padding: 10px 20px;\n        float: left;\n    }\n    &::after {\n        content: \"\";\n        clear: both;\n        display: table;\n    }\n    .pages {\n    }\n    .infinite-scroll-component {\n        display: flex;\n        flex-wrap: wrap;\n        flex: 1;\n    }\n    .pagelink {\n        flex: 1;\n        min-width: 300px;\n        display: block;\n        box-shadow: inset 0 0 10px rgba(${colors.fg},1);\n        border: 2px solid rgba(${colors.fg},1);\n        padding: 10px;\n        margin: 10px;\n    }\n    .pageimage {\n        height: 250px;\n        border: 2px solid rgba(${colors.fg},1);\n        margin: auto;\n        display: block;\n        max-width: 85%;\n        overflow: hidden;\n        box-shadow:  0 0 8px rgba(${colors.fg},1);\n    }\n\n  .masonry-grid {\n    flex: 1;\n    display: flex;\n    margin-left: -30px; /* gutter size offset */\n    width: auto;\n  }\n  .masonry-grid_column {\n    padding-left: 30px; /* gutter size */\n    background-clip: padding-box;\n  }\n  .masonry-grid_column > div { /* change div to reference your elements you put in <Masonry> */\n    margin-bottom: 30px;\n  }\n`\n\nexport const breakpointColumnsObj = {\n    default: 3,\n    1300: 2,\n    900: 1,\n  }\nfunction ItemPage() {\n    const { itemid } = useParams()\n    const [ pagesToShow, setPagesToShow ] = useState(21)\n    const item = items.find(o => o.id === itemid);\n    let itemdataurl = '/transcription/mms-transcribe/api/files?item='  + itemid\n    const [data, loading] = useFetch(itemdataurl);\n    const pageBoxes = data.map((p, index) => {\n            const transc = p.element_texts[1] !== undefined ? p.element_texts[1].text : ''\n            const page = {\n                id: p.id,\n                image: p.file_urls.thumbnail,\n                prog: transc.length > 0 \n            }\n            const box = <Link key={page.id} to ={'/item/' + itemid + '/page/' + page.id} className=\"pagelink\">\n                <img className=\"pageimage\" src={page.image} />\n                <PageProgress prog={page.prog} />\n            </Link>\n        return box\n    }).slice(0,pagesToShow)\n    function addPages(){\n        let newCount = data.length < ( pagesToShow + 21 ) ? data.length : pagesToShow + 21\n        setPagesToShow(newCount)\n    }\n  return (\n        <Wrapper >\n            <Itemcss>\n                <div className=\"itemheadertext\">\n                    <h1>{item.title}</h1>\n                    <p>{item.desc}</p>\n                    <p><a href={item.cataloglink} target=\"_blank\" rel=\"noopener noreferrer\">View Catalog Record</a></p>\n                    <ItemProgress itemid={itemid} pageCount={item.count} />\n                    <div className=\"pages\">\n                    {loading ? (\n                            <Loading pages={item.count} />\n                        ) : (\n                            <>\n                            <InfiniteScroll\n                                dataLength={pageBoxes.length} //This is important field to render the next data\n                                next={addPages}\n                                hasMore={true}\n                                // loader={<h4>Loading...</h4>}\n                                >\n                                    \n                                    {pageBoxes}\n                                </InfiniteScroll>\n                            </>\n                        )}\n                    </div>\n                </div>\n            </Itemcss>\n        </Wrapper>\n    );\n}\nexport default ItemPage;\n\n// 'https://cors-anywhere.herokuapp.com/http://publications.newberry.org/transcription/mms-transcribe/api/files?item=2';\n\n// url parser: \n// var start = et.text.indexOf('href=\"')\n// var end = et.text.indexOf('\"', start + 6)\n// item.catalogLink = et.text.substring(start + 6, end).replace('&amp;', '&')\n// console.log(item.catalogLink)","import { useState } from 'react'\n/** @jsx jsx */\nimport { jsx, css  } from '@emotion/core'\n\n\nexport const bgarray = [\n    ['nby_0BH40','1'],\n    ['nby_1BH1504','1'],\n    ['nby_1BH1507','1'],\n    ['nby_1BH1574','1'],\n    ['nby_1BH2115','1'],\n    ['nby_1BH2128','1'],\n    ['nby_1BH2450','1'],\n    ['nby_1BH2469','1'],\n    ['nby_2B268','1'],\n    ['nby_2BH695','1'],\n    ['nby_3B344','1'],\n    ['nby_3BH803','1'],\n    ['nby_4BH27','1'],\n    ['nby_4BH454','1'],\n    ['nby_4BH789','1'],\n    // ['nby_BB28','1'],\n    ['nby_VO184','1'],\n    ['nby_LL10651','0'],\n    ['nby_LL10834','0'],\n    ['nby_LL10839','0'],\n    ['nby_LL11503','0'],\n    ['nby_LL12011','0'],\n    ['nby_LL13424','0'],\n    ['nby_LL9161','0'],\n    ['nby_VO1422','0']\n]\n\nconst Background = props => {\n    let bgLink;\n    const [rando, setRando ] = useState(Math.round(Math.random() * (bgarray.length - 1)))\n    if (props.image && window.location.pathname.indexOf('item') > -1){\n        bgLink = props.image\n    } else {\n        // const rando = Math.round(Math.random() * (bgarray.length - 1));\n        const bodybg = bgarray[rando]\n        bgLink = '//iiif.archivelab.org/iiif/' + bodybg[0] + `$` + bodybg[1] + '/full/1000,/0/default.jpg'\n    }\n    return(\n        <div css={css`\n        z-index: -9990;\n        position: fixed;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        max-width: 100vw;\n        max-height: 100vh;\n        background: url('${bgLink}');\n        background-size: cover;\n        background-position: 50% 50%;\n        overflow: hidden;\n        `}/>\n    )\n}\n\nexport default Background","import React from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled  from '@emotion/styled'\nimport * as basicScroll from 'basicscroll'\nimport { colors, fonts } from '../components/csscomponents'\nimport logo from '../images/drawing.svg'\n\n\nfunction HeaderView() {\n  let location = useLocation();\n  console.log(location.pathname);\n  return <span>Path : {location.pathname}</span>\n}\n\nconst Topbarcss = styled.div`\n    position: relative;\n    .topbar {\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        height: 2rem;\n        display: flex;\n        z-index: 100;\n        box-shadow: inset 0 0 10px rgba(${colors.hl},1);\n        border: 2px solid rgba(${colors.hl}, 1);\n        // text-shadow: 0 0 10px rgba(${colors.fg},0.75);\n        color: rgba(${colors.fg},1);\n        background: rgba(${colors.bg},1);\n        font-family: ${fonts.serif};\n        img {\n            height: 1.9rem;\n            line-height: 2rem;\n            padding: 1px 3px;\n        }\n        .nlogo, .titletext {\n            display: inline-block;\n        }\n        .titletext {\n            flex: 1;        \n        }\n        .titletext .blurone {\n\n            filter: blur(var(--blurone));\n            // font-size: var(--height);\n            font-size: 1.5rem;\n            line-height: 2rem;\n            transition: transform .1s linear;\n            will-change: filter, font-size;\n            display: inline-block;\n        }\n    }\n    .letter {\n        display: inline-block;\n        transform: translate(var(--tx), 0) rotate(var(--r));\n        will-change: transform;\n        font-family: ${fonts.serif};\n        font-weight: 700;\n    }\n    .carrot {\n        vertical-align: middle;\n        line-height: 2rem;\n        padding: 4px;\n        // margin-right: 5px;\n        transition: 0.2s;\n        filter: drop-shadow(0 0 10px rgba(${colors.fg},0.75));\n        cursor: pointer;\n        &:hover {\n            transform: rotate(180deg);\n        }\n    }\n    .dislink, .homelink {\n        transition: color 0.2s;\n        text-decoration: none;\n        color: rgba(${colors.fg}, 0.8);\n        background-image: linear-gradient(transparent 1px, rgba(${colors.fg}, 1) 2px);\n        background-size: 0% 2px;\n        background-position: 0% 105%;\n        background-repeat: no-repeat;\n        transition: background-size 0.2s ease 0s, color 0.2s;\n\n        &:hover {\n            color: rgba(${colors.fg}, 1);\n            background-size: 100% 3px;\n        }}   \n    .dislink {\n        margin-right: 5px;\n    }\n`\n\nconst TopBar = () => {\n    const curtainText = [['Digital Newberry: ', '//publications.newberry.org/','dislink'],['Newberry Transcribe', '//publications.newberry.org/transcribe','homelink']]\n    let breadcrumbs\n    const location = useLocation()\n    if (location.pathname.indexOf('item') === -1 ){\n        breadcrumbs = curtainText.map(ct => {\n            const letterarray = ct[0].split('').map((i,index) => {\n                const tx = Math.round((Math.random() * 70),0)\n                const r =  Math.round((Math.random() * 330),0)\n                const posneg = Math.round(Math.random()) === 1 ? '' : '-'\n                i = i === ' ' ? '\\u00A0' : i\n                return (\n                    <span key={index} className=\"letter\" data-tx={tx} data-r={posneg + r}>{i}</span>\n                )\n            }) \n            return <a href={ct[1]} key={ct[2]} className={ct[2]} target={ct[2] === 'dislink' ? \"_blank\" : ''} rel={ct[2] === 'dislink' ? \"noopener noreferrer\" : ''}>{letterarray}</a>\n        })\n        const instances = []\n        const curtain = typeof document !== `undefined` ? document.querySelector('.curtain') : null   \n        const letters = typeof document !== `undefined` ? document.querySelectorAll('.letter') : null\n        const esLintSucks = letters !== null ? letters.forEach((elem) => {\n            const tx = elem.getAttribute('data-tx') + 'vw'\n            // const ty = elem.getAttribute('data-ty') + 'px'\n            const r = elem.getAttribute('data-r') + 'deg'\n            instances.push(basicScroll.create({\n                elem: curtain,\n                from: '0px',\n                to: '500px',\n                direct: elem,\n                props: {\n                    '--tx': {\n                        from: tx,\n                        to: '0'\n                    },\n                    '--r': {\n                        from: r,\n                        to: '0'\n                    }\n                }\n            }))\n        }) : ''\n        // const instance = basicScroll.create({\n        //     from: '0px',\n        //     to: '500px',\n        //     props: {\n        //         '--blurone': {\n        //             from: '1px',\n        //             to: '0px'\n        //         },\n        //     }\n        // // }) : ''\n        // })\n        \n        // const instanceStart = curtain !== null ? instance.start() : ''\n        // instance.start()\n\n        instances.forEach((i) => i.start())\n        console.log('start it up')\n    } else {\n        breadcrumbs = curtainText.map(ct => <a href={ct[1]} key={ct[2]} className={ct[2] + ' letter'} target={ct[2] === 'dislink' ? \"_blank\" : ''} rel={ct[2] === 'dislink' ? \"noopener noreferrer\" : ''}>{ct[0]}</a>)\n    }\n    console.log(location.pathname)\n    console.log(location.pathname.indexOf('item'))\n    return (\n        <Topbarcss id=\"topbar\">\n            <div className=\"topbar\">\n                <div className=\"nlogo\"><a href=\"https://www.newberry.org/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src={logo}alt=\"\"/></a></div>\n                <div className=\"titletext\"><span className=\"blurone\">{breadcrumbs}</span></div>\n                <div className=\"jumbler\"></div>\n            </div>\n        </Topbarcss>\n    )\n}\nexport default TopBar","import React from 'react'\nimport styled from '@emotion/styled'\nimport { colors, fonts } from './csscomponents'\n\nconst Betacss = styled.div`\n\n    position: fixed;\n    width: 500px;\n    height: 75px;\n    background: rgba(${colors.hl},1);\n    top: 30px;\n    right: -175px;\n    text-align: center;\n    color: rgba(${colors.bg},1);\n    transform:rotate(45deg);\n    box-shadow: inset 0 0 10px rgba(${colors.fg},1);\n    line-height: 25px;\n    z-index: 10000;\n    text-transform: uppercase;\n    font-family: ${fonts.sans};\n    .title {\n    \tpadding: 5px 0 0 0;\n        font-weight: bold;\n        font-size: 20px;\n        margin: 0;\n    }\n    .link {\n        a {\n            color: rgba(${colors.bg},1);\n            text-decoration: none;\n        }\n        width: 150px;\n        margin: auto;\n        font-size: 16px;\n        line-height: 20px;\n    }\n}\n`\n\nconst BetaBanner = () => {\n    return (\n        <Betacss>\n            <p className=\"title\">B e t a</p>\n            <p className=\"link\"><a href=\"https://forms.gle/LhT2NLRtFviMWeMCA\"  target=\"_blank\" rel=\"noopener noreferrer\">We want your feedback!</a></p>\n        </Betacss>\n    )\n}\n\nexport default BetaBanner\n","import React, { useState, useEffect } from \"react\"\n// import React, { useState, useEffect, useRef } from \"react\"\n// import ReactDOM from 'react-dom' \nimport { Global, css } from \"@emotion/core\"\nimport styled from '@emotion/styled'\nimport Background from '../components/background'\nimport { colors, fonts } from '../components/csscomponents'\nimport Footer from '../components/footer'\nimport Topbar from '../components/topbar'\nimport BetaBanner from '../components/beta'\nimport { useParams} from 'react-router-dom'\n\nconst Wrapper = styled.div`\n    position: relative;\n    margin: 0;\n    padding: 0;\n    z-index: 1;\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n`\n// const Itemcss = styled.div`\n//     @media (min-width: 1501px){width: 80%;}\n//     @media (max-width: 1500px) and (min-width: 901px){width: 95%;}\n//     @media (max-width: 900px){width: 98%;}\n//     background: rgba(${colors.bg});\n//     color: rgba(${colors.fg});\n//     box-shadow: inset 0 0 10px rgba(${colors.fg},1);\n//     margin: 80px auto;\n//     padding: 2vw;\n//     font-family: ${fonts.sans};\n//     border: 2px solid rgba(${colors.fg},0.7);\n//     h1, h3 {\n//         font-family: ${fonts.serif};\n//         margin: 12px 0;\n//     }\n//     h3 {\n//         font-size: 1.5rem;\n//     }\n//     ul {\n//         li {\n//             padding: 5px 0;\n//         }\n//     }\n//     p { \n//         margin-bottom: 12px;\n//     }\n//     a {\n//         font-weight: 900;\n//         text-decoration: none;\n//         color: rgba(${colors.fg}, 1);\n//         background-image: linear-gradient(transparent 1px, rgba(${colors.hl},1) 1px);\n//         background-size: 0% 1px;\n//         background-position: 0% 101%;\n//         background-repeat: no-repeat;\n//         transition: background-size 0.2s ease 0s;\n//         &:hover {\n//             background-size: 100% 2px;\n//         }\n        \n//     }\n//     .itemheaderimage {\n//         padding: 10px 20px;\n//         float: left;\n//     }\n//     &::after {\n//         content: \"\";\n//         clear: both;\n//         display: table;\n//     }\n//     .pages {\n//         display: flex;\n//         flex-wrap: wrap;\n//     }\n//     .pagelink {\n//         cursor: pointer;\n//         flex: 1;\n//         min-width: 300px;\n//         display: block;\n//         box-shadow: inset 0 0 10px rgba(${colors.fg},1);\n//         border: 2px solid rgba(${colors.fg},1);\n//         padding: 10px;\n//         margin: 10px;\n//         transition: all 0.15s;\n//         &:hover {\n//             box-shadow: inset 0 0 10px rgba(${colors.fg},0.5);\n//             border: 2px solid rgba(${colors.fg},0.5);\n\n//         }\n//     }\n//     .pageimage {\n//         height: 250px;\n//         border: 2px solid rgba(${colors.fg},1);\n//         margin: auto;\n//         display: block;\n//         box-shadow:  0 0 8px rgba(${colors.fg},1);\n//     }\n\n//     // .sizewarning {\n//     //     @media (min-width: 500px){display: none;}\n//     //     @media (max-width: 500px){display: block;}\n//     // }\n// `\n\nconst PagePage = () => {\n    const { itemid, pageid } = useParams()\n    const [ loading, setLoading ] = useState(true)\n    useEffect(() => {\n        setLoading(false)\n    }, [])\n    return (\n        <Wrapper >\n            <Global styles={css`\n                html, body {\n                    margin: 0;\n                    padding: 0;\n                    position: relative;\n                    z-index: 1;\n                    -webkit-font-smoothing: antialiased;\n                }\n                .iframeContainer {\n                    padding: 30px 100px;\n                    width: 90%;\n                    height: 1400px;\n                    margin: 60px auto;\n                    z-index: 0;\n                    background: rgba(${colors.bg},1);\n                    border: 2px solid rgba(${colors.fg},1);\n                    box-shadow: inset 0 0 10px rgba(${colors.hl},0.5);\n            \n                }\n                iframe {\n                    width: 1000px;\n                    height: 100%;\n                    z-index: 100;\n                    border-radius: 5px;\n                    width: 100%; \n                    margin: auto;\n                    overflow: auto;\n                    background: rgba(${colors.bg},1);\n                    border: 2px solid rgba(${colors.fg},1);\n                    box-shadow: 0 0 10px rgba(${colors.hl},0.5);\n                }\n            `}/>\n            <Topbar  />\n            <Background />\n            <BetaBanner />\n            <div className=\"iframeContainer\">\n                {loading? '' : <iframe src={`https://publications.newberry.org/transcription/mms-transcribe/scripto/transcribe/${itemid}/${pageid}#transcription`} placeholder={\"Loading...\"} title=\"transcription page\"  /> }\n            </div>\n            <Footer />\n        </Wrapper>\n    )\n}\n\nexport default PagePage\n","import React  from 'react'\nimport styled  from '@emotion/styled'\nimport * as basicScroll from 'basicscroll'\nimport { colors, fonts } from './csscomponents'\n\nconst Jumbocss = styled.div`\n    position: relative;\n    display: block;\n    top: 0;\n    z-index: -2;\n    .subtitletext {\n\n        z-index: -5;\n    }\n    .subtitletext .blurtwo {\n        box-shadow: inset 0 0 10px rgba(${colors.fg},1);\n        color: rgba(${colors.fg},1);\n        background: rgba(${colors.bg},0.85);\n        text-shadow: 0 0 10px rgba(${colors.fg},0.75);\n        opacity: var(--opacity);\n        transition: transform .1s linear;\n        will-change: opacity;\n        font-family: ${fonts.serif};\n        position: fixed;\n        top: 25vh;\n        left: 0;\n        right: 0;\n        text-align: center;\n    }\n    .lgtext {\n        font-size: 10vmin;\n        line-height: 11vmin;\n    }\n    .mdtext {\n        font-size: 7vmin;\n        line-height: 5.5vmin;\n    }\n    .smtext {\n        font-size: 4vmin;\n        line-height: 4vmin;\n        width: 80%;\n        margin: auto;\n        display: block;\n        padding-bottom: 15px;\n    }\n`\nconst Jumbo = () => {\n    const instance = basicScroll.create({\n        from: '0px',\n        to: '500px',\n        props: {\n            '--opacity': {\n                from: 0.99,\n                to: 0.01\n            }\n        }\n    // }) : ''\n    })\n    \n    instance.start()\n    return (\n        <Jumbocss id=\"jumbo\">\n            <div className=\"subtitletext\"><span className=\"blurtwo\">\n                <span className=\"lgtext\">Newberry Transcribe</span><br />\n                <span className=\"mdtext\">Unlock the Past!</span><br />\n                <span className=\"smtext\">Transcribe letters and diaries to help with historical research</span> \n            </span></div>\n        </Jumbocss>\n    )\n}\nexport default Jumbo","import React, { useState, useEffect, useRef } from 'react';\nimport { Switch, Route, useLocation } from 'react-router-dom'\nimport { Global, css } from \"@emotion/core\"\nimport { colors } from './components/csscomponents'\nimport styled from \"@emotion/styled\"\nimport IndexPage from './pages/indexpage'\nimport ItemPage from './pages/itempage'\nimport PagePage from './pages/pagepage'\nimport TextSearchResults from './pages/tsrpage'\nimport TopBar from './components/topbar'\nimport Jumbo from './components/jumbo'\nimport BetaBanner from './components/beta'\nimport Background from './components/background'\nimport Footer from './components/footer';\n\nconst Body = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  // margin-top: 60vh;\n  margin: 0 auto;\n  // @media (min-width: 1500px){width: 80%;}\n  // @media (max-width: 1500px) and (min-width: 1000px){width: 95%;}\n  // @media (max-width: 900){width: 98%;}\n  width: 95%;\n`\n\nconst Anchor = styled.div`\n    position: absolute;\n    top: 50vh;\n    width: 5px;\n    height: 5px;\n    background: black;\n    opacity: 0;\n`\n\nfunction App() {\n  const [ resultCount, setResultCount ] = useState(0)\n  const [ showMenu, setShowMenu ] = useState(false)\n  const [ image, setImage ] = useState('')\n  const { pathname } = useLocation();\n  \n  const pageTop = useRef(null)\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n\n  return (\n    <div>\n      <Global styles={css`\n        html, body {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          z-index: 1;\n        }\n      `}/>\n      <TopBar setShowMenu={setShowMenu} showMenu={showMenu} resultCount={resultCount}  />\n      <Background image={image}/>\n      <Jumbo />\n      <Anchor ref={pageTop} />\n      <BetaBanner />\n      <Body>\n        <Switch>\n          <Route path={`/item/:itemid/page/:pageid`} component={() => <PagePage setImage={setImage}/> } />\n          <Route path={`/item/:itemid`} component={() => <ItemPage setImage={setImage}/> } />\n          <Route component={() => <IndexPage showMenu={showMenu} resultCount={resultCount} setResultCount={setResultCount} />} />\n        </Switch>\n      </Body>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ScrollToTop extends React.Component {\n    componentDidUpdate(prevProps) {\n      if (this.props.location !== prevProps.location) {\n        window.scrollTo(0, 0)\n      }\n    }\n  \n    render() {\n      return this.props.children\n    }\n  }\n  \n  export default withRouter(ScrollToTop)","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ReactGA from 'react-ga'\nimport { Route } from 'react-router-dom'\n\nclass GoogleAnalytics extends Component {\n  componentDidMount () {\n    this.logPageChange(\n      this.props.location.pathname,\n      this.props.location.search\n    )\n  }\n\n  componentDidUpdate ({ location: prevLocation }) {\n    const { location: { pathname, search } } = this.props\n    const isDifferentPathname = pathname !== prevLocation.pathname\n    const isDifferentSearch = search !== prevLocation.search\n\n    if (isDifferentPathname || isDifferentSearch) {\n      this.logPageChange(pathname, search)\n    }\n  }\n\n  logPageChange (pathname, search = '') {\n    const page = pathname + search\n    const { location } = window\n    ReactGA.set({\n      page,\n      location: `${location.origin}${page}`,\n      ...this.props.options\n    })\n    ReactGA.pageview(page)\n  }\n\n  render () {\n    return null\n  }\n}\n\nGoogleAnalytics.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string,\n    search: PropTypes.string\n  }).isRequired,\n  options: PropTypes.object\n}\n\nconst RouteTracker = () =>\n  <Route component={GoogleAnalytics} />\n\nconst init = (options = {}) => {\n  const env = window._env_ || {}\n  const isGAEnabled = true\n\n  if (isGAEnabled) {\n    ReactGA.initialize('UA-5551324-4' )\n  }\n\n  return isGAEnabled\n}\n\nexport default {\n  GoogleAnalytics,\n  RouteTracker,\n  init\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport ScrollToTop from './components/scrolltotop';\nimport GA from './components/googleanalytics'\n\nReactDOM.render(\n    <BrowserRouter basename={'/transcribe'}>\n      { GA.init() && <GA.RouteTracker /> }\n      <ScrollToTop>\n        <App />\n      </ScrollToTop>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import styled from '@emotion/styled'\n\nexport const colors = {\n    fg: '37,37,37',\n    bg: '208,208,208',\n    hl: '15,76,129',\n    hll: '144,165,182',\n    hld: '121,139,153',\n}\nexport const fonts = {\n    sans: \"'Raleway', sans-serif\",\n    serif: \"'Crimson Text', serif\", \n}\nexport const CoreBox = styled.div`\n    background: rgba(${colors.bg}, 1);\n    border: 2px solid rgba(${colors.hl}, 1);\n    box-shadow: inset 0 0 10px rgba(${colors.fg},0.5);\n`\nexport const Bluebutton = styled.div`\n        width: 100%;\n        text-align: center;\n        position: relative;\n        .wrapper {\n            background: rgba(${colors.bg},1);\n            display: inline-block;\n            border: 1px solid  rgba(${colors.fg}, 1);\n            box-shadow: inset 0 0 10px rgba(${colors.hl},1);\n            padding: 0;\n            margin: 6px auto;\n        }\n        .button {\n            text-decoration: none;\n            font-family: ${fonts.sans};\n            display: inline-block;\n            width: initial;\n            padding: 10px 12px;\n            font-size: 14px;\n            cursor: pointer;\n            text-transform: uppercase;\n            // background: rgba(${colors.hll},1);\n            background: rgba(${colors.hl},0.4);\n            color: rgba(${colors.fg},0.8);\n            transition: background 0.1s, color 0.1s;\n            font-weight: 900;\n            &:hover {\n                color: rgba(${colors.fg},1);\n                background: rgba(${colors.hl},0.33);\n            }\n            &.inactive {\n                display: none;\n                cursor: not-allowed;\n                box-shadow: inset 0 0 10px rgba(${colors.fg},1);\n                background: rgba(${colors.bg},1);\n                color: rgba(${colors.fg},0.8);\n                transition: background 0.5s, color 0.1s;\n                &:hover {\n                    color: rgba(${colors.fg},0.4);\n                    background: rgba(${colors.bg},1);\n                }\n            }\n        }\n    }\n`\nexport const Closebutton = styled.div`\n    position: absolute;\n    right: 32px;\n    top: 32px;\n    width: 32px;\n    height: 32px;\n    opacity: 0.3;\n    cursor: pointer;\n    transition: opacity 0.1s ease;\n    &:hover {\n        opacity: 1;\n    }\n    &:before, &:after {\n        position: absolute;\n        left: 15px;\n        content: ' ';\n        height: 33px;\n        width: 2px;\n        background-color: #333;\n    }\n    &:before {\n        transform: rotate(45deg);\n    }\n    &:after {\n        transform: rotate(-45deg);\n    }\n`\nexport const Modal = styled.div`\n    position: fixed;\n    z-index: 100;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(${colors.fg},0.33);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-content: center;\n    > div {\n        padding: 40px;\n        margin: auto;\n        width: 65%;\n        @media (min-width: 979px;) { width: 75%; }\n        @media (min-width: 768px;) and (max-width: 978px;) { width: 85%; }\n        @media (max-width: 768px;) { width: 95%; }\n    }\n`\nexport const Selectcss = styled.select`\n    font-family: ${fonts.sans};\n    box-shadow: inset 0 0 10px rgba(${colors.hl},0.5);\n    border: 2px solid rgba(${colors.fg},0.7);\n    background: rgba(${colors.bg},0.7);\n    margin: 4px 0;\n    height: 30px;\n    line-height: 30px;\n    font-size: 12px;\n    padding-left: 5px;\n    text-transform: uppercase;\n    width: 100%;\n`\nexport const Gardacss = styled.footer`\n    padding: 15px;\n    width: 90%;\n    margin: auto;\n    color: rgba(${colors.fg},1);\n    display: flex;\n    flex-wrap: wrap;\n    .footercontent {\n        padding: 25px;\n        &.tweets{\n            overflow: auto;\n            max-height: 500px;\n            iframe {\n                border-radius: 5px;\n                box-shadow:  0 0 8px rgba(${colors.fg},1);\n            }\n        } \n    } \n    h3 {\n        font-family: ${fonts.serif};\n    }\n    p {\n        font-family: ${fonts.sans};\n    }\n    a, .notlink {\n        font-weight: 900;\n        text-decoration: none;\n        color: rgba(${colors.fg}, 1);\n        background-image: linear-gradient(transparent 1px, rgba(${colors.fg}, 1) 2px);\n        background-size: 0% 2px;\n        background-position: 0% 105%;\n        background-repeat: no-repeat;\n        transition: background-size 0.2s ease 0s, color 0.2s;\n        &:hover {\n            color: rgba(${colors.fg}, 0.8);\n            background-size: 100% 3px;\n        }\n        cursor: pointer;\n        h3 {\n            // display: inline;\n        }\n    }\n    .imagelink {\n\n            background: none;\n            display: block;\n            margin: auto;\n            width: 100%;\n        img {\n            display: block;\n            max-width: 85%;\n            border-radius: 5px;\n            margin: auto;\n            // margin:  0 auto 20px auto;\n            box-shadow:  0 0 8px rgba(${colors.fg},1);\n        }\n    }\n    .masonry-grid {\n        flex: 1;\n        display: flex;\n        margin-left: -30px; /* gutter size offset */\n        // width: auto;\n    }\n    .masonry-grid_column {\n        padding-left: 30px; /* gutter size */\n        background-clip: padding-box;\n    }\n    .masonry-grid_column > div { /* change div to reference your elements you put in <Masonry> */\n        margin: 0 auto 30px auto;\n    }\n`\nexport const Contentcss = styled.div`\n    position: relative;\n    max-height: 90vh;\n    overflow: auto;\n    background-color: rgba(${colors.bg},1);\n    padding: 5px 25px;\n    margin: 10vh auto;\n    box-shadow: inset 0 0 8px rgba(${colors.fg},1);\n    border: 2px solid rgba(${colors.fg},0.7);\n    shadow: 10px 10px 60px rgba(${colors.fg},0.5);\n    a, .notlink {\n        font-weight: 900;\n        transition: color 0.2s;\n        text-decoration: none;\n        color: rgba(${colors.fg}, 1);\n        background-image: linear-gradient(transparent 1px, rgba(${colors.fg}, 1) 2px);\n        background-size: 0% 2px;\n        background-position: 0% 105%;\n        background-repeat: no-repeat;\n        transition: background-size 0.2s ease 0s, color 0.2s;\n        &:hover {\n            color: rgba(${colors.fg}, 0.8);\n            background-size: 100% 3px;\n        }\n        cursor: pointer;\n    }\n    dt {\n        font-family: ${fonts.serif};\n        font-weight: 900;\n        font-size: 1rem;\n    } \n    dd {\n        font-family: ${fonts.sans};\n        margin: 0 0 10px 0;\n        font-size: 0.9rem;\n    }\n`\n","import React, { useState } from 'react'\nimport Masonry from 'react-masonry-css'\n/** @jsx jsx */\nimport { jsx, css  } from '@emotion/core'\nimport { Gardacss, Contentcss, Closebutton, Modal, CoreBox } from './csscomponents'\nimport { TwitterTimelineEmbed } from 'react-twitter-embed'\nimport RecentItem from './recent'\nimport tmpic from '../images/timemachine.png'\nimport pspic from '../images/postcardsender.png'\n\nconst breakpointColumnsObj = {\n    default: 2,\n    900: 1\n};\n\n  \nconst Footer = () => {\n    const [ gettingStarted, setgettingStarted ] = useState(false)\n    const [ tips, settips ] = useState(false)\n    const [ about, setabout ] = useState(false)\n    const toggleSection = (section, e) => {\n        e.stopPropagation();\n        const toggler = eval('set' + section)\n        const toggled = eval(section)\n        toggler(!toggled)\n    }\n    return (\n        <Gardacss >\n                <Masonry\n                    breakpointCols={breakpointColumnsObj}\n                    className=\"masonry-grid\"\n                    columnClassName=\"masonry-grid_column\">\n                    <CoreBox className=\"footercontent contact\">\n                        <h3>Questions? Comments?</h3>\n                        <p>Contact the Newberry’s Digital Initiatives and Services staff: <a href=\"https://twitter.com/digitalnewberry\" target=\"_blank\" rel=\"noopener noreferrer\">@DigitalNewberry</a> or <a href=\"mailto:dis@newberry.org?Subject=Newberry%20Transcribe\" target=\"_blank\" rel=\"noopener noreferrer\">dis@newberry.org</a></p>\n                        <h3>About this project</h3>\n                        <p>Newberry Transcribe lets you contribute to historical scholarship, while learning about the everyday lives of individuals from a wide variety of backgrounds in the 19th and early 20th centuries. </p>\n                        <p>By transcribing handwritten letters, diaries, and other materials from the Newberry's Modern Manuscript Collections, you're helping to preserve these voices from the past -- making their stories easier to find, search, and read.  <span className=\"notlink\" onClick={e => toggleSection('about', e)}>More information.</span></p>\n                        {about ?  <Modal  onClick={() => setabout(false)}><About setabout={setabout}/> </Modal> : ''}\n                    </CoreBox>\n                    <CoreBox className=\"footercontent license\">\n                        <h3>Guidelines</h3>\n                        <p>Unsure how to get started? <span className=\"notlink\" onClick={e => toggleSection('gettingStarted', e)}>Click here!</span></p>\n                        <p>New to transcribing?  <span className=\"notlink\" onClick={e => toggleSection('tips', e)}>Click here</span> for some tips that will help you transcribe more effectively. </p>\n                        {gettingStarted ? <Modal onClick={() => setgettingStarted(false)}><GettingStarted setgettingStarted={setgettingStarted}/> </Modal> : ''}\n                        {tips ? <Modal  onClick={() => settips(false)}><Tips settips={settips}/> </Modal> : ''}\n                        <h3>License</h3>\n                        <p>\n                            Except where otherwise noted, contextual content on this site is made available under a <a href=\"https://creativecommons.org/share-your-work/public-domain/cc0/\" target=\"_blank\" rel=\"noopener noreferrer\">Creative Commons Public Domain license</a>.  Digitized images and other media from the Newberry's collections are made available for any lawful purpose, commercial or non-commercial, without licensing or permission fees to the library, subject to the following terms and conditions: <a href=\"https://www.newberry.org/rights-and-reproductions\" target=\"_blank\" rel=\"noopener noreferrer\">Newberry Rights and Reproductions Policy.</a>  The transcription data is available in json format <a href=\"https://publications.newberry.org/transcription/mms-transcribe/data/alltranscripts.json\" target=\"_blank\" rel=\"noopener noreferrer\">here.</a> \n                        </p>\n                    </CoreBox>\n                    <CoreBox className=\"footercontent\">\n                        <a href=\"https://publications.newberry.org/postcard-sender/\" className=\"imagelink\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <img src={pspic} />\n                        </a>\n                        <a href=\"https://publications.newberry.org/postcard-sender/\" target=\"_blank\" rel=\"noopener noreferrer\" ><h3>Send a postcard!</h3></a>\n                        <p>Inspired after transcribing correspondence? Write a message to a friend with our Postcard Sender! </p>\n                        <p><a href=\"http://publications.newberry.org/postcard-sender/\" target=\"_blank\" rel=\"noopener noreferrer\">Choose from a selection</a> or browse 26,000+ items at the <a href=\"https://archive.org/details/newberrypostcards\" target=\"_blank\" rel=\"noopener noreferrer\">Newberry Postcards digital collection</a> and click the Sender link below any image.</p>\n\n                    </CoreBox>\n                    <CoreBox className=\"footercontent timemachine\">\n                        <a href=\"https://publications.newberry.org/time-machine/\" className=\"imagelink\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <img src={tmpic} />\n                        </a>\n                        <a href=\"https://publications.newberry.org/time-machine/\" target=\"_blank\" rel=\"noopener noreferrer\"><h3>Midwest Time Machine</h3></a>\n                        \n                        <p>Travel to the past with highlights from our favorite letters and diaries -- transcribed by users like you!</p>\n                    </CoreBox>\n                    <CoreBox className=\"footercontent tweets\">\n\n                        <TwitterTimelineEmbed \n                            // sourceType=\"url\"\n                            // url=\"https://twitter.com/digitalnewberry/lists/crowdsourcing\" \n                            sourceType=\"profile\"\n                            screenName=\"digitalnewberry\"\n                            options={{height: 400, tweetLimit: 5}} \n                            />\n                    </CoreBox>\n                    <RecentItem />\n                </Masonry>\n        </Gardacss>\n    )\n}\nconst GettingStarted = ({ setgettingStarted }) => (\n    <Contentcss onClick={e => e.stopPropagation()}>\n        <Closebutton onClick={() => setgettingStarted(false)} />\n        <h3>Getting Started</h3>\n        <ul>\n        <li>First, click on a manuscript that interests you.</li>\n        <li>You will be taken to a display of the manuscript’s individual pages. Select a page labeled “Not Started.”</li>\n        <li>The page image will appear in a viewer, with a text box below. You can use the tools in the upper left corner of the viewer to zoom in and out and to move the document page around. </li>\n        <li>Below the viewer is a text box. Put your cursor into the box, and then simply begin typing what you see on the page.</li>\n        <li>Make sure to save your work frequently.</li>\n        <li>Keep in mind that any user can build upon another user’s work by adding to or editing an incomplete transcription. To do so, select a page labeled “Needs Review” and then follow the instructions above.</li>\n        <li>Optional: Users are encouraged to create accounts, which will enable them to track their own progress and gather updates on recent revisions by other users. To create an account, navigate to a page image in any collection and click the </li>'Log <li>In (optional)' button above the image. You'll be redirected to a new page that will allow you to create an account by following some simple steps.</li>\n        </ul>\n    </Contentcss>\n)\nconst About = ({setabout }) => (\n    <Contentcss onClick={e => e.stopPropagation()}>\n        <Closebutton onClick={() => setabout(false)} />\n\n            <h3>About this project</h3>\n\n            <p>Newberry Transcribe lets you contribute to historical scholarship, while learning about the everyday lives of individuals from a wide variety of backgrounds in the 19th and early 20th centuries. By transcribing handwritten letters, diaries, and other materials from the Newberry's Modern Manuscript Collections, you're helping to preserve these voices from the past -- making their stories easier to find, search, and read.</p>\n            <h4>FAQs</h4>\n            <dl>\n                <dt>Why transcribe?</dt>\n                <dd>Crowdsourced transcription projects like Newberry Transcribe give participants the chance to engage with manuscripts in new and exciting ways while also contributing to scholarship and expanding public access to previously hard-to-access documents. By allowing users to transcribe these documents, transcription projects make it possible to create searchable digitized texts for scholars to use in their research and members of the public to examine at their leisure. Though primary sources such as the items included in Newberry Transcribe are likely of great value to historians, sociologists, and other scholars, libraries lack the staff that would be needed to transcribe manuscript content on such a large scale. In order to make the collections searchable by researchers, the Newberry is turning to the public for help.</dd>\n                <dt>What manuscripts are available to transcribe?</dt>\n                <dd>Newberry Transcribe allows users to transcribe letters, diaries, journals, and other material from the Newberry’s Modern Manuscripts Collections, a repository of American manuscripts from the mid-18th through the 20th centuries. The content of the more than 800 physical collections mirrors the library’s collecting strengths, including all aspects of the history and culture of Chicago and the Midwest, American Indians, American History and Culture, Printing and Book Arts, Music, Religion, Genealogy, and Maps, Travel and Exploration.<br />\n                Holdings are strongest for Chicago and the Midwest, with over 500 collections in these areas. Consequently, many of the items included on this site are drawn from our Midwest Manuscripts Collection and provide first-hand accounts of everyday life in the Midwest during the 19th century. However, the site also includes items not specific to a single region, including the collected papers of a multi-generational family, the Everetts, whose members crisscrossed the country, settling in South Carolina, Kansas, and beyond. </dd>\n                <dt>How can I get started?</dt>\n                <dd>To get started, visit our Guidelines page for an overview of the transcription process.</dd>\n                <dt>How can I view or search the transcriptions?</dt>\n                <dd>Completed transcriptions can be accessed using the search box at the left on the Newberry Transcribe home page. Additionally, they will be added periodically to digitized manuscripts at the Newberry's Internet Archive library, where they can be searched and browsed. Finally, to encourage digital scholarship projects, we have made the transcriptions available as a data set at our GitHub site. </dd>\n                <dt>What software does Newberry Transcribe use?</dt>\n                <dd>Newberry Transcribe is powered by Omeka with Scripto, open-source tools developed by the Roy Rosenzweig Center for History and New Media to enable community transcriptions of document files.  The front end is written in React JavaScript; <a href=\"https://github.com/newberrydis/transcribe\" target=\"_blank\" rel=\"noopener noreferrer\">our code repository can be found here</a> </dd>\n            <dt>Questions or comments?</dt>\n            <dd>Contact us on Twitter <a href=\"https://twitter.com/digitalnewberry\" target=\"_blank\" rel=\"noopener noreferrer\">@DigitalNewberry</a> or email dis@newberry.org</dd>\n        </dl>\n    </Contentcss>\n)\nconst Tips = ({ settips }) => (\n    <Contentcss onClick={e => e.stopPropagation()}>\n    <Closebutton onClick={() => settips(false)} />\n        <h3>Transcription tips</h3>\n        <dl>\n            <dt>Save your work</dt>\n            <dd>After completing any transcription, remember to hit the save button to ensure that your work is preserved.</dd>\n            \n            <dt>Transcribe what you see</dt>\n            <dd>Simply type what you see on the page, preserving spelling errors, punctuation, and so on. Resist the urge to modernize spelling or to correct mistakes. Type words exactly as they are presented, including capitalization, abbreviations, names, and dates.</dd>\n            \n            <dt>Use complete words</dt>\n            <dd>Often, a writer will break and hyphenate a word when moving from one line to the next. Don't preserve these breaks; just write the complete word. This will better enable researchers to run effective word searches.</dd>\n            \n            <dt>Use brackets to indicate that a word or phrase is unclear </dt>\n            <dd>When you encounter words or phrases that you can't make out, just use double brackets to indicate this (i.e., \"[[unclear]]\"). If can propose a reasonable guess, place your guess in double brackets with a question mark following it (e.g., [[barn?]]).</dd>\n            \n            <dt>Indicate the presence of sketches or doodles with a note</dt>\n            <dd>If you encounter a sketch or doodle on a manuscript page, indicate this by placing the word image in the double brackets (e.g. \"[[image]]\"). If you feel that you can make out what the image is, place your guess in the double brackets as well (e.g. \"[[barn--image]]\").</dd>\n            \n            <dt>Transcribe as much as you can on a page and then move on</dt>\n            <dd>In general, you should try to finish page transcriptions if you can, but if you feel bored or confused by a particular page, just move on to a different one. Somebody else will take over where you left off.</dd>\n            \n            <dt>Don't attempt to format text</dt>\n            <dd>No need to indicate line breaks, indents, underlining, etc. Remember, the goal is to make the digitized manuscript searchable; users will be able to view the page image itself, so describing the appearance of the text is unnecessary.</dd>\n            \n            <dt>Rely on context to decipher words</dt>\n            <dd>Handwriting can be difficult to read. Look for similar words or letters in the document that may help you to decode the handwriting.</dd>\n            \n            <dt>View the collection guide or catalog record</dt>\n            <dd>The item description includes a link for its archival collection guide when available; or catalog record when not available. These links provide more information about the larger collection that your item is drawn from, and may include names of places, people, subjects, and events that can provide clues in deciphering manuscript text.</dd>\n            \n            <dt>Remember: some access is better than none</dt>\n            <dd>Don't worry if your work isn't perfect or if you're unable to complete a page; others can review your work and edit or add to your transcription later. Keep in mind that without your help, these handwritten pages are completely unsearchable - so any transcribed text you can provide is better than none.</dd>\n    \n        </dl>\n    </Contentcss>\n)\nexport default Footer","import React, { useState, useEffect } from 'react'\nimport styled from '@emotion/styled'\nimport { CoreBox, fonts, colors } from './csscomponents'\n\nconst RecentItemCss = styled.div`\n    .pixbox {\n        background:linear-gradient(rgba(255,255,255,0.75), rgba(255,255,255,0.75)), url('${props => props.img}');\n        padding: 20px;\n        border: 2px solid rgba(${colors.hl}, 1);\n        box-shadow: inset 0 0 10px rgba(${colors.fg},0.5);\n        position: relative;\n        background-position: center;\n        h4 {\n            font-size: 1.2rem;\n            font-family: ${fonts.serif};\n        }\n        margin-bottom: 20px;\n    }\n`\n\nconst RecentItem = () => {\n    const [ item, setItem ] = useState('')\n    const [ img, setImg ] = useState('')\n    const getItem = () => {\n        // console.log('firing')\n        fetch('https://publications.newberry.org/transcription/mms-transcribe/recentdata.json')\n            .then(response => response.json())\n            .then(data => makeItem(data));\n    }\n    const transcriptor = t => {\n        let returnt = t.replace(\"Created page with \",\"\");\n        var first = returnt.charAt(1),\n            maxlength = 340;\n\n        if (first === first.toLowerCase() && first !== first.toUpperCase()) {\n            returnt = returnt.substr(returnt.indexOf(\".\")+2, returnt.length);\n        }\n        if (returnt.length > maxlength) {\n            returnt = returnt.substr(0,maxlength);\n            returnt = returnt.substr(0, Math.min(returnt.length, returnt.lastIndexOf(\" \")));\n        }\n        if (returnt.charAt(returnt.length - 2) !== '.') {\n            returnt = returnt.substr(0,returnt.length - 1) + '...';\n        }\n        return returnt\n    }\n    const makeItem = props => {\n        setImg(\"http://publications.newberry.org/transcription/mms-transcribe/files/original/\" + props.filename)\n        let itemlink = \"https://publications.newberry.org/transcribe/item/\" + props.document_id + \"/page/\" + props.document_page_id\n        let transcript = transcriptor(props.comment)\n        const returnItem = <CoreBox className=\"footercontent tweets\">\n            <h3>Most Recent Contribution:</h3>\n            <div className=\"pixbox\">\n                <h4><a href={itemlink} target=\"_blank\" rel=\"noopener noreferrer\">{props.document_title}</a></h4>\n                <p>{transcript}</p>\n            </div>\n            <p><a href={itemlink} target=\"_blank\" rel=\"noopener noreferrer\">Visit the page</a></p>\n        </CoreBox>\n        setItem(returnItem)\n    }\n    useEffect(()=> {\n        getItem()\n    }, [])\n    return (\n        <RecentItemCss img={img}>\n            {item}\n        </RecentItemCss>\n\n    )\n}\n\nexport default RecentItem","module.exports = __webpack_public_path__ + \"static/media/timemachine.c208b392.png\";","module.exports = __webpack_public_path__ + \"static/media/postcardsender.57489b35.png\";","module.exports = __webpack_public_path__ + \"static/media/drawing.c27c3060.svg\";"],"sourceRoot":""}