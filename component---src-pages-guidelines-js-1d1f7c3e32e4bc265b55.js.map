{"version":3,"sources":["webpack:///./src/pages/guidelines.js"],"names":["Guidecss","styled","div","colors","bg","fg","fonts","sans","serif","Glcontent","url","data","useState","content","setContent","a","async","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","then","console","log","value","Parser","Guidelines","bgId","setBgId","bgNo","setBgNo","styles","css","className","to"],"mappings":"s5CAUA,IAAMA,EAAWC,IAAOC,IAAV,IAESC,IAAOC,GACZD,IAAOE,GACaF,IAAOE,GAG1BC,IAAMC,KAEFD,IAAME,MAePL,IAAOE,GACqCF,IAAOE,GAM/CF,IAAOE,IAuBjC,IAAMI,EAAY,WAAM,IAjBAC,EAAUC,EAAlC,EAiBuB,EACWC,mBAAS,cAAhCC,EADY,KACHC,EADG,KAOnB,OAxBoBJ,EAmBH,+GAnBrB,EAAAK,EAAAC,OAAA,gEAAwBN,MAAM,SAA9B,IAAkCC,MAAO,IAAzC,WAAAI,EAAA,MAC2BE,MAAMP,EAAK,CAC9BQ,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUhB,MAX7B,cACUiB,EADV,kBAAAb,EAAA,MAaiBa,EAASC,QAb1B,8EAoBuBC,MAAK,SAACnB,GACrBoB,QAAQC,IAAIrB,EAAK,0EAA0E,mCAAmC,GAAKsB,OACnInB,EAAWH,EAAK,0EAA0E,mCAAmC,GAAKsB,UAGlI,kBAACjC,EAAD,KACI,wDACCkC,IAAOrB,KAyBLsB,UArBI,WAAO,IAAD,EACGvB,qBAAjBwB,EADc,KACRC,EADQ,OAEGzB,qBAAjB0B,EAFc,KAERC,EAFQ,KAGrB,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAQC,OAAQC,YAAF,OAMd,yBAAKC,UAAU,UACX,yBAAKA,UAAU,WAAU,kBAAC,OAAD,CAAMC,GAAI,KAAV,wBACzB,yBAAKD,UAAU,aAAf,yBAEJ,kBAAC,IAAD,CAAYL,QAASA,EAASE,QAASA,IACvC,kBAAC9B,EAAD,MACA,kBAAC,IAAD,CAAQ2B,KAAMA,EAAME,KAAMA","file":"component---src-pages-guidelines-js-1d1f7c3e32e4bc265b55.js","sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'gatsby'\nimport Background from '../components/background'\nimport styled from '@emotion/styled'\nimport Parser from 'html-react-parser';\nimport { Global, css } from \"@emotion/core\"\nimport Footer from '../components/footer'\nimport { colors, fonts } from '../components/styles'\nimport { Indexcss } from './index'\n\nconst Guidecss = styled.div`\n    width: 60%;\n    background: rgba(${colors.bg});\n    color: rgba(${colors.fg});\n    box-shadow: inset 0 0 10px rgba(${colors.fg},1);\n    margin: 80px auto;\n    padding: 2vw 5vw;\n    font-family: ${fonts.sans};\n    h1, h3 {\n        font-family: ${fonts.serif};\n        margin: 12px 0;\n    }\n    h3 {\n        font-size: 1.5rem;\n    }\n    ul {\n        li {\n            padding: 5px 0;\n        }\n    }\n    a {\n        font-weight: 900;\n        transition: color 0.2s;\n        text-decoration: none;\n        color: rgba(${colors.fg}, 1);\n        background-image: linear-gradient(transparent 1px, rgba(${colors.fg}, 1) 2px);\n        background-size: 0% 2px;\n        background-position: 0% 105%;\n        background-repeat: no-repeat;\n        transition: background-size 0.2s ease 0s, color 0.2s;\n        &:hover {\n            color: rgba(${colors.fg}, 0.8);\n            background-size: 100% 3px;\n        }\n    }\n`\n\nasync function postData(url = '', data = {}) {\n    const response = await fetch(url, {\n        method: 'POST', \n        mode: 'cors', \n        cache: 'no-cache', \n        credentials: 'same-origin', \n        headers: {\n            'Content-Type': 'application/json'\n        },\n        redirect: 'follow', \n        referrerPolicy: 'no-referrer', \n        body: JSON.stringify(data) \n    });\n    return await response.json(); \n}\n  \n\nconst Glcontent = () =>{\n    const [content, setContent] = useState('Loading...')\n    const dataLink = 'https://cors-anywhere.herokuapp.com/https://publications.newberry.org/digital/mms-transcribe/guidelines.json'\n    postData(dataLink).then((data) => {\n        console.log(data[\"https://publications.newberry.org/digital/mms-transcribe/guidelines.42\"][\"http://rdfs.org/sioc/ns#content\"][\"0\"].value)\n        setContent(data[\"https://publications.newberry.org/digital/mms-transcribe/guidelines.42\"][\"http://rdfs.org/sioc/ns#content\"][\"0\"].value)\n    });\n    return (\n        <Guidecss>\n            <h1>Transcription Guidelines</h1>\n            {Parser(content)}\n        </Guidecss>\n    )\n}\nconst Guidelines = () => {\n    const [bgId, setBgId] = useState()\n    const [bgNo, setBgNo] = useState()\n    return (\n        <Indexcss >\n            <Global styles={css`\n                html, body {\n                    margin: 0;\n                    padding: 0;\n                }\n            `}/>\n            <div className=\"banner\">\n                <div className=\"leftext\"><Link to={'/'} >Newberry Transcribe</Link></div>\n                <div className=\"righttext\">Be a part of history</div>\n            </div>\n            <Background setBgId={setBgId} setBgNo={setBgNo} />\n            <Glcontent />\n            <Footer bgId={bgId} bgNo={bgNo}/>\n        </Indexcss>\n    )\n}\nexport default Guidelines"],"sourceRoot":""}