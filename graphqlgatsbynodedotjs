const path = require('path');
// const contentjson = require('./src/data/content.json');
// const data = contentjson['items']

//     const itemTemplate = path.resolve(`./src/templates/item-template.js`);
//     data.forEach(item => {
//         var path = 'item/' + item.id;
//         createPage({
//             path,
//             component: itemTemplate,
//             context: item,
//         })
//     })
// }

const { createFilePath } = require(`gatsby-source-filesystem`)
exports.onCreateNode = ({ node, getNode, actions }) => {
  const { createNodeField } = actions
  if (node.internal.type === `File`) {
    const slug = createFilePath({ node, getNode, basePath: `pages` })
    createNodeField({
      node,
      name: `slug`,
      value: slug,
    })
  }
}

exports.createPages = async ({ graphql, actions }) => {
    const { createPage } = actions
    const result = await graphql(`
    {
        allFile(filter: {extension: {eq: "json"}}) {
          nodes {
            childDataJson {
              items {
                cataloglink
                category
                count
                date
                desc
                id
                image
                lang
                percentTranscribed
                title
                transcount
              }
            }
          }
        }
      }
  `)
  console.log(result)
    result.allFile.nodes[1].childDataJson.items.forEach(({ node }) => {
        createPage({
            path: 'item/' + node.id,
            component: path.resolve(`./src/templates/item-template.js`),
            context: node,
        })
    })
    // console.log(JSON.stringify(result, null, 4))
}
