{"version":3,"sources":["webpack:///./src/images/loading.gif","webpack:///./src/templates/item-template.js"],"names":["module","exports","Wrapper","styled","div","Itemcss","colors","bg","fg","fonts","sans","serif","hl","loading","props","iframeHeight","withLocation","item","pageContext","useState","undefined","search","page","pageType","setPageType","progress","count","transcount","percentTranscribed","useEffect","bgimage","image","indexOf","pages","transcriptions","find","id","map","i","key","pageid","className","onClick","navigate","src","pagefilename","alt","status","transcription","styles","css","charSet","title","desc","cataloglink","length","href","target","rel","progressData","placeholder"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,uD,s7GCkB3C,IAAMC,EAAUC,IAAOC,IAAV,KASPC,EAAUF,IAAOC,IAAV,IAIUE,IAAOC,GACZD,IAAOE,GACaF,IAAOE,GAG1BC,IAAMC,KACIJ,IAAOE,GAEbC,IAAME,MAiBPL,IAAOE,GACqCF,IAAOM,GA4B/BN,IAAOE,GAChBF,IAAOE,GAKMF,IAAOE,GAChBF,IAAOE,GAMXF,IAAOE,GAGJF,IAAOE,GAKXK,KAkBX,SAAAC,GAAK,OAAIA,EAAMC,eAGCT,IAAOE,IAkF7BQ,uBAzEF,SAAEF,GACX,IAAMG,EAAOH,EAAMI,YADG,EAEiBC,mBAAS,QAAzCJ,EAFe,aAGUI,wBAA+BC,IAAtBN,EAAMO,OAAOC,KAAqB,OAAS,SAA7EC,EAHe,KAGLC,EAHK,KAIhBC,EAAW,CACbC,MAAOT,EAAKS,MACZC,WAAYV,EAAKU,WACjBC,mBAAoBX,EAAKW,oBAK7BC,qBAAU,WACNL,OAAkCJ,IAAtBN,EAAMO,OAAOC,KAAqB,OAAS,UAExD,CAACR,EAAMO,SAMV,IAAIS,EAAUb,EAAKc,MAAMC,QAAQ,UAAY,EAAIf,EAAKc,MAASd,EAAKc,MAAQ,4BAEtEE,EADIC,EAAc,eAAmBC,MAAM,qBAAGC,KAAgBnB,EAAKmB,MACvDH,MAAMI,KAAI,SAAAC,GAAC,OACzB,uBAAGC,IAAKD,EAAEE,OAAQC,UAAU,WAAWC,QAAS,kBAfjCpB,EAeiDgB,EAAEE,YAdlEG,mBAAS,SAAWrB,GADN,IAACA,IAgBX,yBAAKmB,UAAU,YAAYG,IAAK,yFAA2FN,EAAEO,aAAcC,IAAI,KAC/I,kBAAC,IAAD,CAAgBC,SAAQT,EAAEU,oBAGlC,OACI,kBAAC9C,EAAD,KACI,kBAAC,IAAD,CAAQ+C,OAAQC,YAAF,OAQd,kBAAC,IAAD,KACI,0BAAMC,QAAQ,UACd,uDAEJ,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAYpB,MAAOD,IACnB,kBAAC,IAAD,MACA,kBAACzB,EAAD,CAASU,aAAcA,GACnB,yBAAK0B,UAAU,kBACI,SAAblB,EACE,yBAAKkB,UAAU,kBACX,4BAAKxB,EAAKmC,OACV,2BAAInC,EAAKoC,MACRpC,EAAKqC,YAAYC,OAAS,EAAI,2BAAG,uBAAGC,KAAMvC,EAAKqC,YAAcG,OAAO,SAASC,IAAI,uBAAhD,qBAAiG,GACnI,kBAAC,IAAD,CAAUC,aAAclC,IACxB,yBAAKgB,UAAU,SACVR,IAIT,yBAAKQ,UAAU,mBAIf,4BAAQG,IAAG,qFAAuF3B,EAAKmB,GAA5F,IAAkGtB,EAAMO,OAAOC,KAA/G,iBAAqIsC,YAAa,aAAcR,MAAM,0BAK7L,kBAAC,IAAD,W","file":"component---src-templates-item-template-js-9d47f63d142c272be80b.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/loading-3ef0e69f3c889c1307330c36a501eb12.gif\";","import React, { useState, useEffect } from \"react\"\n// import React, { useState, useEffect, useRef } from \"react\"\n// import ReactDOM from 'react-dom' \nimport { Global, css } from \"@emotion/core\"\nimport Helmet from 'react-helmet'\nimport styled from '@emotion/styled'\nimport { navigate } from \"@reach/router\"\nimport Background from '../components/background'\nimport { colors, fonts } from '../components/csscomponents'\nimport Footer from '../components/footer'\nimport Topbar from '../components/topbar'\nimport { Simpleprogress } from \"../components/progress\"\nimport BetaBanner from '../components/beta'\nimport Progress from '../components/progress'\nimport transcriptions from '../data/itemTranscriptions.json'\nimport withLocation from \"../components/withlocation\"\nimport loading from '../images/loading.gif'\n\nconst Wrapper = styled.div`\n    position: relative;\n    margin: 0;\n    padding: 0;\n    z-index: 1;\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n`\nconst Itemcss = styled.div`\n    @media (min-width: 1501px){width: 80%;}\n    @media (max-width: 1500px) and (min-width: 901px){width: 95%;}\n    @media (max-width: 900px){width: 98%;}\n    background: rgba(${colors.bg});\n    color: rgba(${colors.fg});\n    box-shadow: inset 0 0 10px rgba(${colors.fg},1);\n    margin: 80px auto;\n    padding: 2vw;\n    font-family: ${fonts.sans};\n    border: 2px solid rgba(${colors.fg},0.7);\n    h1, h3 {\n        font-family: ${fonts.serif};\n        margin: 12px 0;\n    }\n    h3 {\n        font-size: 1.5rem;\n    }\n    ul {\n        li {\n            padding: 5px 0;\n        }\n    }\n    p { \n        margin-bottom: 12px;\n    }\n    a {\n        font-weight: 900;\n        text-decoration: none;\n        color: rgba(${colors.fg}, 1);\n        background-image: linear-gradient(transparent 1px, rgba(${colors.hl},1) 1px);\n        background-size: 0% 1px;\n        background-position: 0% 101%;\n        background-repeat: no-repeat;\n        transition: background-size 0.2s ease 0s;\n        &:hover {\n            background-size: 100% 2px;\n        }\n        \n    }\n    .itemheaderimage {\n        padding: 10px 20px;\n        float: left;\n    }\n    &::after {\n        content: \"\";\n        clear: both;\n        display: table;\n    }\n    .pages {\n        display: flex;\n        flex-wrap: wrap;\n    }\n    .pagelink {\n        cursor: pointer;\n        flex: 1;\n        min-width: 300px;\n        display: block;\n        box-shadow: inset 0 0 10px rgba(${colors.fg},1);\n        border: 2px solid rgba(${colors.fg},1);\n        padding: 10px;\n        margin: 10px;\n        transition: all 0.15s;\n        &:hover {\n            box-shadow: inset 0 0 10px rgba(${colors.fg},0.5);\n            border: 2px solid rgba(${colors.fg},0.5);\n\n        }\n    }\n    .pageimage {\n        height: 250px;\n        border: 2px solid rgba(${colors.fg},1);\n        margin: auto;\n        display: block;\n        box-shadow:  0 0 8px rgba(${colors.fg},1);\n    }\n    .iframeContainer {\n        position: relative;\n        z-index: 0;\n        background-image: url(${loading})\n        &:after {\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            margin: auto;\n            line-height: 200px;\n            z-index: 0;\n            text-align: center;\n            content: \"Loading...\";\n        }\n    }\n    iframe {\n        z-index: 100;\n        border-radius: 5px;\n        width: 100%; \n        margin: 0;\n        // height: ${props => props.iframeHeight};\n        height: 80vh;\n        overflow: auto;\n        box-shadow:  0 0 10px rgba(${colors.fg},1);\n        background: white;\n    }\n    // .sizewarning {\n    //     @media (min-width: 500px){display: none;}\n    //     @media (max-width: 500px){display: block;}\n    // }\n`\n\nconst Item = ( props ) => {\n    const item = props.pageContext\n    const [iframeHeight, setIfameHeight] = useState('80vh')\n    const [pageType, setPageType] = useState(props.search.page === undefined ? 'item' : 'page')\n    const progress = {\n        count: item.count,\n        transcount: item.transcount,\n        percentTranscribed: item.percentTranscribed,\n    }\n    const navToPage = (page) => {\n        navigate('?page=' + page)\n    }\n    useEffect(() => {\n        setPageType(props.search.page === undefined ? 'item' : 'page')\n        \n    }, [props.search]);\n    // const myIframe = useRef(null)\n    // const resizeIframe = () => {\n    //     setIfameHeight(myIframe.scrollHeight + 'px')\n    //     console.log(iframeHeight)\n    // }\n    let bgimage = item.image.indexOf('files') > -1 ? item.image :  item.image + '/full/1000,/0/default.jpg'\n    let uhh = transcriptions['transcriptions'].find( ({ id }) => id === item.id )\n    const pages = uhh.pages.map(i => \n        <a key={i.pageid} className=\"pagelink\" onClick={() => navToPage(i.pageid)}>\n            <img className=\"pageimage\" src={'http://publications.newberry.org/transcription/mms-transcribe/files/square_thumbnails/' + i.pagefilename} alt=\"\" />\n            <Simpleprogress status={i.transcription ? true : false} />\n        </a>\n    )\n    return (\n        <Wrapper >\n            <Global styles={css`\n                html, body {\n                    margin: 0;\n                    padding: 0;\n                    position: relative;\n                    z-index: 1;\n                }\n            `}/>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Newberry Transcribe</title>\n            </Helmet>\n            <Topbar  />\n            <Background image={bgimage}/>\n            <BetaBanner />\n            <Itemcss iframeHeight={iframeHeight} >\n                <div className=\"itemheadertext\">\n                    { pageType === 'item' ? \n                        <div className=\"itemheadertext\">\n                            <h1>{item.title}</h1>\n                            <p>{item.desc}</p>\n                            {item.cataloglink.length > 0 ? <p><a href={item.cataloglink}  target=\"_blank\" rel=\"noopener noreferrer\">More Information</a></p> : ''}\n                            <Progress progressData={progress} />\n                            <div className=\"pages\">\n                                {pages}\n                            </div>\n                        </div>\n                        : \n                        <div className=\"iframeContainer\">\n                            {/* \n                            <iframe src={`https://publications.newberry.org/transcription/mms-transcribe/scripto/transcribe/${item.id}/${props.search.page}#transcription`} placeholder={\"Loading...\"} title=\"transcription page\"  ref={myIframe} onLoad={o => resizeIframe(o)}/>\n                        */}\n                        <iframe src={`https://publications.newberry.org/transcription/mms-transcribe/scripto/transcribe/${item.id}/${props.search.page}#transcription`} placeholder={\"Loading...\"} title=\"transcription page\"  />\n                            </div>\n                    }\n                </div>\n            </Itemcss>\n            <Footer />\n        </Wrapper>\n    )\n}\n\nexport default withLocation(Item)\n\n{/* <div key={i.pageid} onClick={() => NavToPage(props.pathname, i.pageid, props.setPageType) } className=\"pagelink\" role=\"navigation\" tabIndex={1}>\n    <img className=\"pageimage\" src={'http://publications.newberry.org/transcription/mms-transcribe/files/square_thumbnails/' + i.pagefilename} alt=\"\" />\n    <Simpleprogress status={i.transcription ? true : false} />\n</div> */}"],"sourceRoot":""}