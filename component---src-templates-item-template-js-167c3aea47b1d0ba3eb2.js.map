{"version":3,"sources":["webpack:///./src/templates/item-template.js"],"names":["Itemcss","styled","div","colors","bg","fg","fonts","sans","serif","props","console","log","pageContext","item","useState","bgId","setBgId","bgNo","setBgNo","pages","map","i","href","id","pageid","className","src","pagefilename","status","transcription","styles","css","image","title","desc"],"mappings":"ynDAcA,IAAMA,EAAUC,IAAOC,IAAV,IAEUC,IAAOC,GACZD,IAAOE,GACaF,IAAOE,GAG1BC,IAAMC,KACIJ,IAAOE,GAEbC,IAAME,MAcPL,IAAOE,GAmBaF,IAAOE,GAChBF,IAAOE,GAKPF,IAAOE,IAOzB,mBAAEI,GACbC,QAAQC,IAAIF,EAAMG,aAClB,IAAMC,EAAOJ,EAAMG,YAFK,EAGAE,qBAAjBC,EAHiB,KAGXC,EAHW,OAIAF,qBAAjBG,EAJiB,KAIXC,EAJW,KAKlBC,EAAQN,EAAKM,MAAMC,KAAI,SAAAC,GAAC,OAC1B,uBAAGC,KAAI,qFAAuFT,EAAKU,GAA5F,IAAkGF,EAAEG,OAApG,iBAA4HC,UAAU,YACzI,yBAAKA,UAAU,YAAYC,IAAK,yFAA2FL,EAAEM,eAC5HjB,QAAQC,IAAIU,GACb,kBAAC,IAAD,CAAgBO,SAAQP,EAAEQ,oBAGlC,OACI,kBAAC,WAAD,KACA,kBAAC,IAAD,CAAQC,OAAQC,YAAF,OAQd,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAYf,QAASA,EAASE,QAASA,IACnC,kBAAClB,EAAD,KACI,yBAAKyB,UAAU,mBACX,yBAAKC,IAAKb,EAAKmB,MAAQ,8BAE3B,yBAAKP,UAAU,kBAEX,4BAAKZ,EAAKoB,OACV,2BAAIpB,EAAKqB,MACT,yBAAKT,UAAU,SACVN,KAIb,kBAAC,IAAD,CAAQJ,KAAMA,EAAME,KAAMA","file":"component---src-templates-item-template-js-167c3aea47b1d0ba3eb2.js","sourcesContent":["import React, { useState } from \"react\"\nimport Background from '../components/background'\nimport { Global, css } from \"@emotion/core\"\nimport styled from '@emotion/styled'\nimport { graphql } from \"gatsby\"\nimport { colors, fonts } from '../components/styles'\nimport Footer from '../components/footer'\nimport Topbar from '../components/topbar'\nimport { Indexcss } from '../pages/index.js'\nimport { Simpleprogress } from \"../components/progressbar\"\n\n\n\n\nconst Itemcss = styled.div`\n    width: 60%;\n    background: rgba(${colors.bg});\n    color: rgba(${colors.fg});\n    box-shadow: inset 0 0 10px rgba(${colors.fg},1);\n    margin: 80px auto;\n    padding: 2vw 5vw;\n    font-family: ${fonts.sans};\n    border: 2px solid rgba(${colors.fg},0.7);\n    h1, h3 {\n        font-family: ${fonts.serif};\n        margin: 12px 0;\n    }\n    h3 {\n        font-size: 1.5rem;\n    }\n    ul {\n        li {\n            padding: 5px 0;\n        }\n    }\n    a {\n        font-weight: 900;\n        text-decoration: none;\n        color: rgba(${colors.fg}, 1);\n        \n    }\n    .itemheaderimage {\n        padding: 10px;\n        float: left;\n    }\n    &::after {\n        content: \"\";\n        clear: both;\n        display: table;\n    }\n    .pages {\n        display: flex;\n        flex-wrap: wrap;\n    }\n    .pagelink {\n        flex: 1;\n        display: block;\n        box-shadow: inset 0 0 10px rgba(${colors.fg},1);\n        border: 2px solid rgba(${colors.fg},1);\n        padding: 10px;\n        margin: 10px;\n    }\n    .pageimage {\n        border: 2px solid rgba(${colors.fg},1);\n        margin: auto;\n        display: block;\n    }\n`\n\n\nexport default ( props ) => {\n    console.log(props.pageContext)\n    const item = props.pageContext\n    const [bgId, setBgId] = useState()\n    const [bgNo, setBgNo] = useState()\n    const pages = item.pages.map(i => \n        <a href={`https://publications.newberry.org/transcription/mms-transcribe/scripto/transcribe/${item.id}/${i.pageid}#transcription`} className=\"pagelink\">\n            <img className=\"pageimage\" src={'http://publications.newberry.org/transcription/mms-transcribe/files/square_thumbnails/' + i.pagefilename} />\n            {console.log(i)}\n            <Simpleprogress status={i.transcription ? true : false} />\n        </a>\n    )\n    return (\n        <Indexcss >\n        <Global styles={css`\n            html, body {\n                margin: 0;\n                padding: 0;\n                position: relative;\n                z-index: 1;\n            }\n        `}/>\n        <Topbar  />\n        <Background setBgId={setBgId} setBgNo={setBgNo} />\n            <Itemcss>\n                <div className=\"itemheaderimage\">\n                    <img src={item.image + '/full/400,/0/default.jpg'} />\n                </div>\n                <div className=\"itemheadertext\">\n                    \n                    <h1>{item.title}</h1>\n                    <p>{item.desc}</p>\n                    <div className=\"pages\">\n                        {pages}\n                    </div>\n                </div>\n            </Itemcss>\n            <Footer bgId={bgId} bgNo={bgNo}/>\n        </Indexcss>\n    )\n}\n// export const query = graphql`\n//   {\n//     sitePage {\n//       context {\n//         id\n//         title\n//         transcount\n//       }\n//     }\n//   }\n// `\n"],"sourceRoot":""}