{"version":3,"sources":["webpack:///./src/components/progress.js","webpack:///./src/images/loading.gif","webpack:///./src/templates/item-template.js"],"names":["Progresscss","styled","div","colors","fg","bg","hl","fonts","serif","props","percent","numberWithCommas","x","Math","round","toString","replace","Simpleprogcss","complstatus","Simpleprogress","status","Progress","count","progressData","totalPages","transcount","totalTranscount","percentTranscribed","title","className","module","exports","Wrapper","Itemcss","sans","withLocation","item","pageContext","progress","bgimage","image","indexOf","pages","transcriptions","find","id","map","i","to","pageid","state","key","src","pagefilename","alt","transcription","styles","css","charSet","desc","cataloglink","length","href","target","rel"],"mappings":"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","file":"component---src-templates-item-template-js-cf033e3e0ecbf3d5c369.js","sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled'\nimport { fonts, colors } from './csscomponents'\n\nconst Progresscss = styled.div`\n    border: 2px solid rgba(${colors.fg},0.7);\n    margin: 4px 0 8px 0;\n    height: 32px;\n    background: rgba(${colors.bg},0.7);\n    box-shadow: inset 0 0 10px rgba(0,42,85,0.7);\n    position: relative;\n    display: flex;\n    &:hover {\n        .text {\n            // color: rgba(${colors.fg},0.9);\n            color: black;\n        }\n        .complete {\n            background: rgba(${colors.hl},0.65);\n        }\n    }\n    .text {\n        font-family: ${fonts.serif};\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        height: 26px;\n        font-size: 16px;\n        line-height: 26px;\n        // padding: 2px 0;\n        // margin: 0 auto;\n        text-align: center;\n        color: rgba(${colors.fg},0.8);\n        transition: color 0.3s;\n    }\n    .complete {\n        display: block;\n        background: rgba(${colors.hl},0.4);\n        flex-basis: ${props => props.percent}%;\n        transition: background 0.5s;\n    }\n  \n    transition: background 0.5s;\n    transition: color 0.5s;\n`\nexport function numberWithCommas(x) {\n    x = Math.round(x)\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\nconst Progress = props => {\n    const count = props.progressData.totalPages ? props.progressData.totalPages : props.progressData.count\n    const transcount = props.progressData.totalTranscount ? props.progressData.totalTranscount : props.progressData.transcount\n    const percent = Math.round(props.progressData.percentTranscribed,0)\n    return (\n        <Progresscss \n            title={numberWithCommas(transcount) + ' out of ' + numberWithCommas(count) + ' pages transcribed!'} \n            percent={percent}>\n            <div className=\"complete\"></div>\n            <div className=\"text\">{percent}% transcribed</div>\n        </Progresscss>\n    )\n}\n\nconst Proboxcss = styled.div`\n    p {\n        margin: 0;\n    }\n    .percent {\n        text-align: center;\n        font-size: 30px;\n        line-height: 28px;\n    }\n    .bottomtext {\n        font-size: 12px;\n        line-height: 8px;\n    }\n`\n\nexport const Progressbox = props => {\n    const percent = Math.round(props.progressData.percentTranscribed,0)\n    return (\n        <Proboxcss>\n            <p className=\"percent\">{percent}%</p>\n            <p className=\"bottomtext\">transcribed!</p>\n        </Proboxcss>\n    )\n}\nconst Simpleprogcss = styled.div`\n    border: 2px solid rgba(${colors.fg},0.7);\n    margin: 4px 0;\n    height: 26px; \n    line-height: 26px;\n    text-align: center;\n    background: ${props => props.complstatus ? `rgba(${colors.hl},0.4);` : `rgba(${colors.bg},0.7)`};\n    box-shadow: inset 0 0 10px rgba(0,42,85,0.7);\n    position: relative;\n    transition: 0.1s;\n    &:hover {\n        color: black;\n        background: ${props => props.complstatus ? `rgba(${colors.hl},0.2);` : `rgba(${colors.bg},0.5)`};\n    }\n`\nexport const Simpleprogress = props  => {\n    const complstatus = props.status ? \"In Progress / Needs Review\" : \"Not transcribed\"\n    return (\n        <Simpleprogcss complstatus={props.status}>{complstatus}</Simpleprogcss>\n    )\n}\n\nexport default Progress","module.exports = __webpack_public_path__ + \"static/loading-3ef0e69f3c889c1307330c36a501eb12.gif\";","import React, { useState, useEffect } from \"react\"\n// import React, { useState, useEffect, useRef } from \"react\"\n// import ReactDOM from 'react-dom' \nimport { Global, css } from \"@emotion/core\"\nimport Helmet from 'react-helmet'\nimport styled from '@emotion/styled'\nimport { navigate } from \"@reach/router\"\nimport Background from '../components/background'\nimport { colors, fonts } from '../components/csscomponents'\nimport Footer from '../components/footer'\nimport Topbar from '../components/topbar'\nimport { Simpleprogress } from \"../components/progress\"\nimport BetaBanner from '../components/beta'\nimport Progress from '../components/progress'\nimport transcriptions from '../data/itemTranscriptions.json'\nimport withLocation from \"../components/withlocation\"\nimport loading from '../images/loading.gif'\nimport { Link } from \"gatsby\"\n\nconst Wrapper = styled.div`\n    position: relative;\n    margin: 0;\n    padding: 0;\n    z-index: 1;\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n`\nconst Itemcss = styled.div`\n    @media (min-width: 1501px){width: 80%;}\n    @media (max-width: 1500px) and (min-width: 901px){width: 95%;}\n    @media (max-width: 900px){width: 98%;}\n    background: rgba(${colors.bg});\n    color: rgba(${colors.fg});\n    box-shadow: inset 0 0 10px rgba(${colors.fg},1);\n    margin: 80px auto;\n    padding: 2vw;\n    font-family: ${fonts.sans};\n    border: 2px solid rgba(${colors.fg},0.7);\n    h1, h3 {\n        font-family: ${fonts.serif};\n        margin: 12px 0;\n    }\n    h3 {\n        font-size: 1.5rem;\n    }\n    ul {\n        li {\n            padding: 5px 0;\n        }\n    }\n    p { \n        margin-bottom: 12px;\n    }\n    a {\n        font-weight: 900;\n        text-decoration: none;\n        color: rgba(${colors.fg}, 1);\n        background-image: linear-gradient(transparent 1px, rgba(${colors.hl},1) 1px);\n        background-size: 0% 1px;\n        background-position: 0% 101%;\n        background-repeat: no-repeat;\n        transition: background-size 0.2s ease 0s;\n        &:hover {\n            background-size: 100% 2px;\n        }\n        \n    }\n    .itemheaderimage {\n        padding: 10px 20px;\n        float: left;\n    }\n    &::after {\n        content: \"\";\n        clear: both;\n        display: table;\n    }\n    .pages {\n        display: flex;\n        flex-wrap: wrap;\n    }\n    .pagelink {\n        cursor: pointer;\n        flex: 1;\n        min-width: 300px;\n        display: block;\n        box-shadow: inset 0 0 10px rgba(${colors.fg},1);\n        border: 2px solid rgba(${colors.fg},1);\n        padding: 10px;\n        margin: 10px;\n        transition: all 0.15s;\n        &:hover {\n            box-shadow: inset 0 0 10px rgba(${colors.fg},0.5);\n            border: 2px solid rgba(${colors.fg},0.5);\n\n        }\n    }\n    .pageimage {\n        height: 250px;\n        border: 2px solid rgba(${colors.fg},1);\n        margin: auto;\n        display: block;\n        box-shadow:  0 0 8px rgba(${colors.fg},1);\n    }\n\n    // .sizewarning {\n    //     @media (min-width: 500px){display: none;}\n    //     @media (max-width: 500px){display: block;}\n    // }\n`\n\nconst Item = ( props ) => {\n    const item = props.pageContext\n    const progress = {\n        count: item.count,\n        transcount: item.transcount,\n        percentTranscribed: item.percentTranscribed,\n    }\n    let bgimage = item.image.indexOf('files') > -1 ? item.image :  item.image + '/full/1000,/0/default.jpg'\n    let uhh = transcriptions['transcriptions'].find( ({ id }) => id === item.id )\n    const pages = uhh.pages.map(i => \n        <Link to={'/page?itemid=' + item.id + '&pageid=' + i.pageid} state={{ item: i, id: item.id }} key={i.pageid} className=\"pagelink\" >\n            <img className=\"pageimage\" src={'http://publications.newberry.org/transcription/mms-transcribe/files/square_thumbnails/' + i.pagefilename} alt=\"\" />\n            <Simpleprogress status={i.transcription ? true : false} />\n        </Link>\n    )\n    return (\n        <Wrapper >\n            <Global styles={css`\n                html, body {\n                    margin: 0;\n                    padding: 0;\n                    position: relative;\n                    z-index: 1;\n                    -webkit-font-smoothing: antialiased;\n                }\n                .iframeContainer {\n                    padding: 30px 100px;\n                    width: 90%;\n                    height: 1400px;\n                    margin: 60px auto;\n                    z-index: 0;\n                    background: rgba(${colors.bg},1);\n                    border: 2px solid rgba(${colors.fg},1);\n                    box-shadow: inset 0 0 10px rgba(${colors.hl},0.5);\n            \n                }\n                iframe {\n                    width: 1000px;\n                    height: 100%;\n                    z-index: 100;\n                    border-radius: 5px;\n                    width: 100%; \n                    margin: auto;\n                    overflow: auto;\n                    background: rgba(${colors.bg},1);\n                    border: 2px solid rgba(${colors.fg},1);\n                    box-shadow: 0 0 10px rgba(${colors.hl},0.5);\n                }\n            `}/>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Newberry Transcribe</title>\n            </Helmet>\n            <Topbar  />\n                        <Background image={bgimage}/>\n                        <BetaBanner />\n                        <Itemcss  >\n                            <div className=\"itemheadertext\">\n                                <div className=\"itemheadertext\">\n                                    <h1>{item.title}</h1>\n                                    <p>{item.desc}</p>\n                                    {item.cataloglink.length > 0 ? <p><a href={item.cataloglink}  target=\"_blank\" rel=\"noopener noreferrer\">More Information</a></p> : ''}\n                                    <Progress progressData={progress} />\n                                    <div className=\"pages\">\n                                        {pages}\n                                    </div>\n                                </div>\n                            </div>\n                        </Itemcss>\n             <Footer />\n        </Wrapper>\n    )\n}\n\nexport default withLocation(Item)"],"sourceRoot":""}