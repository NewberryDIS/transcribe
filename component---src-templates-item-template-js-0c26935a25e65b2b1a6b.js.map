{"version":3,"sources":["webpack:///./src/templates/item-template.js"],"names":["Wrapper","styled","div","Itemcss","colors","bg","fg","fonts","sans","serif","hl","props","console","log","pageContext","item","pages","transcriptions","find","id","map","i","href","pageid","className","src","pagefilename","status","transcription","progress","count","transcount","percentTranscribed","styles","css","image","title","desc","cataloglink","progressData"],"mappings":"2xEAaA,IAAMA,EAAUC,IAAOC,IAAV,KASPC,EAAUF,IAAOC,IAAV,IAEUE,IAAOC,GACZD,IAAOE,GACaF,IAAOE,GAG1BC,IAAMC,KACIJ,IAAOE,GAEbC,IAAME,MAiBPL,IAAOE,GACqCF,IAAOM,GA2B/BN,IAAOE,GAChBF,IAAOE,GAMPF,IAAOE,GAIJF,IAAOE,IAI5B,mBAAEK,GACbC,QAAQC,IAAIF,EAAMG,aAClB,IAAMC,EAAOJ,EAAMG,YAGbE,EADIC,EAAc,eAAmBC,MAAM,qBAAGC,KAAgBJ,EAAKI,MACvDH,MAAMI,KAAI,SAAAC,GAAC,OACzB,uBAAGC,KAAI,qFAAuFP,EAAKI,GAA5F,IAAkGE,EAAEE,OAApG,iBAA4HC,UAAU,YACzI,yBAAKA,UAAU,YAAYC,IAAK,yFAA2FJ,EAAEK,eAC7H,kBAAC,IAAD,CAAgBC,SAAQN,EAAEO,oBAG5BC,EAAW,CACbC,MAAOf,EAAKe,MACZC,WAAYhB,EAAKgB,WACjBC,mBAAoBjB,EAAKiB,oBAE7B,OACI,kBAAChC,EAAD,KACA,kBAAC,IAAD,CAAQiC,OAAQC,YAAF,OAQd,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAYC,MAAOpB,EAAKoB,MAAQ,8BAChC,kBAAC,IAAD,MACI,kBAAChC,EAAD,KACI,yBAAKqB,UAAU,kBAEX,4BAAKT,EAAKqB,OACV,2BAAIrB,EAAKsB,MACT,2BAAG,uBAAGf,KAAMP,EAAKuB,aAAd,wBACH,kBAAC,IAAD,CAAUC,aAAcV,IACxB,yBAAKL,UAAU,SACVR,KAIb,kBAAC,IAAD,S","file":"component---src-templates-item-template-js-0c26935a25e65b2b1a6b.js","sourcesContent":["import React, { useState } from \"react\"\nimport { Global, css } from \"@emotion/core\"\nimport styled from '@emotion/styled'\n// import { graphql } from \"gatsby\"\nimport Background from '../components/background'\nimport { colors, fonts } from '../components/csscomponents'\nimport Footer from '../components/footer'\nimport Topbar from '../components/topbar'\nimport { Simpleprogress } from \"../components/progress\"\nimport BetaBanner from '../components/beta'\nimport Progress from '../components/progress'\nimport transcriptions from '../data/itemTranscriptions.json'\n\nconst Wrapper = styled.div`\n    position: relative;\n    margin: 0;\n    padding: 0;\n    z-index: 1;\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n`\nconst Itemcss = styled.div`\n    width: 60%;\n    background: rgba(${colors.bg});\n    color: rgba(${colors.fg});\n    box-shadow: inset 0 0 10px rgba(${colors.fg},1);\n    margin: 80px auto;\n    padding: 2vw;\n    font-family: ${fonts.sans};\n    border: 2px solid rgba(${colors.fg},0.7);\n    h1, h3 {\n        font-family: ${fonts.serif};\n        margin: 12px 0;\n    }\n    h3 {\n        font-size: 1.5rem;\n    }\n    ul {\n        li {\n            padding: 5px 0;\n        }\n    }\n    p { \n        margin-bottom: 12px;\n    }\n    a {\n        font-weight: 900;\n        text-decoration: none;\n        color: rgba(${colors.fg}, 1);\n        background-image: linear-gradient(transparent 1px, rgba(${colors.hl},1) 1px);\n        background-size: 0% 1px;\n        background-position: 0% 101%;\n        background-repeat: no-repeat;\n        transition: background-size 0.2s ease 0s;\n        &:hover {\n            background-size: 100% 2px;\n        }\n        \n    }\n    .itemheaderimage {\n        padding: 10px 20px;\n        float: left;\n    }\n    &::after {\n        content: \"\";\n        clear: both;\n        display: table;\n    }\n    .pages {\n        display: flex;\n        flex-wrap: wrap;\n    }\n    .pagelink {\n        flex: 1;\n        min-width: 300px;\n        display: block;\n        box-shadow: inset 0 0 10px rgba(${colors.fg},1);\n        border: 2px solid rgba(${colors.fg},1);\n        padding: 10px;\n        margin: 10px;\n    }\n    .pageimage {\n        height: 250px;\n        border: 2px solid rgba(${colors.fg},1);\n        margin: auto;\n        display: block;\n\n        box-shadow:  0 0 8px rgba(${colors.fg},1);\n    }\n`\n\nexport default ( props ) => {\n    console.log(props.pageContext)\n    const item = props.pageContext\n\n    let uhh = transcriptions['transcriptions'].find( ({ id }) => id === item.id )\n    const pages = uhh.pages.map(i => \n        <a href={`https://publications.newberry.org/transcription/mms-transcribe/scripto/transcribe/${item.id}/${i.pageid}#transcription`} className=\"pagelink\">\n            <img className=\"pageimage\" src={'http://publications.newberry.org/transcription/mms-transcribe/files/square_thumbnails/' + i.pagefilename} />\n            <Simpleprogress status={i.transcription ? true : false} />\n        </a>\n    )\n    const progress = {\n        count: item.count,\n        transcount: item.transcount,\n        percentTranscribed: item.percentTranscribed,\n    }\n    return (\n        <Wrapper >\n        <Global styles={css`\n            html, body {\n                margin: 0;\n                padding: 0;\n                position: relative;\n                z-index: 1;\n            }\n        `}/>\n        <Topbar  />\n        <Background image={item.image + '/full/1000,/0/default.jpg'}/>\n        <BetaBanner />\n            <Itemcss>\n                <div className=\"itemheadertext\">\n                    \n                    <h1>{item.title}</h1>\n                    <p>{item.desc}</p>\n                    <p><a href={item.cataloglink}>View Catalog Record</a></p>\n                    <Progress progressData={progress} />\n                    <div className=\"pages\">\n                        {pages}\n                    </div>\n                </div>\n            </Itemcss>\n            <Footer />\n        </Wrapper>\n    )\n}\n"],"sourceRoot":""}